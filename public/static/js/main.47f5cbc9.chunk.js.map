{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/Home.js","components/auth/ProtectedRoutes.js","components/MainService.js","components/service/ServicesList.js","components/order/OrderList.js","components/user/MainPage.js","components/building/AddBuilding.js","components/building/EditBuilding.js","components/building/InviteLink.js","components/building/BuildingDetails.js","components/building/BuildingsPage.js","components/service/AddService.js","components/order/OrderForm.js","components/service/EditService.js","components/service/ServiceDetails.js","components/user/ProfilePage.js","components/service/ServicesPage.js","components/order/OrdersPage.js","components/building/InvitePage.js","components/RedirectToMain.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","user","onClick","logout","AuthService","this","service","axios","create","baseURL","process","withCredentials","email","password","name","post","then","response","data","get","userId","new","image","Signup","state","errorMessage","passwordCheck","passwordCounter","handleChange","bind","handleFormSubmit","responseGoogle","e","target","value","setState","checkPasswordLength","console","log","length","preventDefault","signup","getUser","history","push","catch","err","googleLogin","resp","onSubmit","type","onChange","style","border","disabled","href","Component","Login","login","Home","src","alt","ProtectedRoutes","component","rest","render","pathname","from","location","MainService","buildings","cep","number","buildingId","description","category","price","date","apartment","serviceId","quantity","code","orderId","status","ServicesList","services","map","idx","key","building","_id","OrderList","orders","statusAvailable","order","includes","origin","handleStatus","filter","elem","element","MainPage","activeOrders","buildingApiCalled","userApiCalled","serviceApiCalled","orderAPICalled","toggleButton","confirmationCode","toggleStatusButton","handleChangeCode","handleOnSubmit","handleToggleStatus","getAllBuildings","residents","getAllServices","owner","getAllOrders","buildingInvite","changeStatus","getUserUpdated","getBuildings","handleToggle","placeholder","getUserBuildings","getUserServices","getUserOrders","slice","address","AddBuilding","handleSubmit","addBuilding","message","duplicate","width","EditBuilding","handleFileUpload","editBuilding","handleClick","getEditedBuilding","uploadData","FormData","files","append","editBuildingPhoto","InviteLink","copyCodeToClipboard","copySuccess","navigator","clipboard","writeText","color","BuildingDetails","search","toggleEdit","params","match","getBuildingDetails","id","newBuilding","getBuildingServices","BuildingsPage","handleChangeSearch","toLowerCase","AddService","addService","OrderForm","addOrder","EditService","editService","getEditedService","editServicePhoto","ServiceDetails","serviceAPICalled","getServiceDetails","servicoId","newService","getServiceOrders","ProfilePage","passwordConfirmation","handlePasswordSubmit","edit","editPassword","editPhoto","ServicesPage","OrdersPage","InvitePage","inviteCode","invitationCode","RedirectToMain","_","Footer","App","loggedUser","loggedin","fetchUser","exact","path","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.47f5cbc9.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../css/Navbar.css\";\n// import BurguerMenu from '../menu/BurguerMenu'\n\n\nconst Navbar = (props) => {\n  return (\n    \n    <nav className=\"nav-main-box\">\n      <div className=\"nav-left-side\">\n        <NavLink className='nav-link-left' to=\"/\">Nosso Predio</NavLink>\n      </div>\n        {/* <BurguerMenu /> */}\n      <div >\n        {!props.user ? (\n          <div className=\"nav-right-side\">\n              <NavLink className='nav-link-right' to=\"/signup\">Signup</NavLink>\n              <NavLink className='nav-link-right' to=\"/login\">Login</NavLink>\n          </div>\n        ) : (\n          <div className='nav-right-side'>\n            <NavLink className='nav-link-right' to='/perfil'>Perfil</NavLink>\n            <button className='logout-btn' onClick={() => props.logout()}>Logout</button>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  signup(email, password, name) {\n    return this.service\n      .post(\"/signup\", { email, password, name })\n      .then((response) => (\n        response.data\n        ));\n  }\n\n  login(email, password) {\n    return this.service\n      .post(\"/login\", { email, password })\n      .then((response) => response.data)\n  }\n\n  googleLogin(){\n    return this.service.get('/auth/google')\n    .then(response => response.data)\n  }\n\n  logout() {\n    return this.service\n    .get(\"/logout\", {})\n    .then((response) => response.data);\n  }\n\n  loggedin() {\n    return this.service\n    .get('/loggedin', {})\n    .then((response) => response.data)\n  }\n\n  edit(email, name, userId){\n    return this.service\n    .post(`/edit-user/${userId}`, {email, name}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPassword( password, userId){\n    return this.service\n    .post(`/edit-password/${userId}`, {password}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPhoto(image, userId){\n    return this.service\n    .post(`/edit-photo/${userId}`, image, {new: true})\n    .then((response) => response.data)\n  }\n\n}\n\nexport default AuthService;\n","// auth/Signup.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Auth.css\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      errorMessage: null,\n      passwordCheck: null,\n      passwordCounter: 0,\n    };\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n    if (name === \"password\") {\n      this.checkPasswordLength();\n    }\n  }\n\n  checkPasswordLength() {\n    console.log(this.state.password.length);\n    if (this.state.password.length+1 > 5) {\n      this.setState({\n        passwordCheck: \"2px solid green\",\n      });\n    } else {\n      this.setState({\n        passwordCheck: \"2px solid red\",\n      });\n    }\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { email, password, name } = this.state;\n    this.service\n      .signup(email, password, name)\n      .then((response) => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n          name: \"\",\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/pagina-principal\");\n      })\n      .catch((err) => {\n        this.setState({\n          errorMessage: \"Email já cadastrado\",\n        });\n      });\n  }\n\n  responseGoogle(response) {\n    this.service\n      .googleLogin()\n      .then((resp) => console.log(\"RESP:\", resp))\n      .catch((err) => console.log(err));\n    console.log(\"RESPONSE:\", response);\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h2 className=\"auth-title\">Cadastrar</h2>\n        <p className=\"auth-alternative\">\n          Já tem uma conta?\n          <Link className=\"auth-alternative\" to={\"/login\"}>\n            {\" \"}\n            Entre <strong> aqui! </strong>\n          </Link>\n        </p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-item\">\n            <label>Nome:</label> <br />\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Email:</label> <br />\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Senha:</label> <br />\n            <input\n              className=\"form-input\"\n              type=\"password\"\n              name=\"password\"\n              style={{ border: this.state.passwordCheck }}\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <p className=\"password-warning\">\n              Crie uma senha com no mínimo 6 caracteres\n            </p>\n          </div>\n          {this.state.password.length < 6 ? (\n            <input\n              disabled\n              className=\"form-input-submit\"\n              type=\"submit\"\n              value=\"Cadastrar\"\n            />\n          ) : (\n            <input\n              className=\"form-input-submit\"\n              type=\"submit\"\n              value=\"Cadastrar\"\n            />\n          )}\n        </form>\n\n        <div className=\"auth-google\">\n          <p className=\"auth-alternative\">\n            Ou então entre com sua conta Google\n          </p>\n          <div className=\"social-login-container\">\n            <a\n              className=\"social-login form-input-submit\"\n              href=\"http://nosso-predio.herokuapp.com/api/auth/google\"\n            >\n              GOOGLE\n            </a>\n          </div>\n        </div>\n        <p>{this.state.errorMessage}</p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","// auth/Login.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Auth.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: null,\n    };\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { email, password } = this.state;\n    this.service\n      .login(email, password)\n      .then((response) => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/pagina-principal\");\n      })\n      .catch((err) => {\n        this.setState({\n          errorMessage: \"Email e/ou senha incorretos\",\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h2 className=\"auth-title\">Entrar</h2>\n        <p className=\"auth-alternative\">\n          Não tem uma conta?\n          <Link className=\"auth-alternative\" to={\"/signup\"}>  Cadastre-se <strong>aqui!</strong></Link>\n        </p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-item\">\n            <label>Email:</label> <br/>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Senha:</label> <br/>\n            <input\n              className=\"\"\n              type=\"password\"\n              name=\"password\"\n              className=\"form-input\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input className=\"form-input-submit\" type=\"submit\" value=\"Entrar\" />\n        </form>\n        <div className=\"auth-google\">\n          <p className=\"auth-alternative\">\n            Ou então entre com sua conta Google\n          </p>\n          <div className='social-login-container'>\n              <a className='social-login form-input-submit' href=\"http://nosso-predio.herokuapp.com/api/auth/google\">GOOGLE</a>\n          </div>\n        </div>\n        <div>\n          <p>{this.state.errorMessage}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../components/css/Home.css\";\n\nconst Home = (props) => {\n  return (\n    <div>\n      <div className=\"home-title\">\n        <h1>Nosso Prédio</h1>\n      </div>\n      {props.user ? (\n        <div className=\"home-link-box\">\n          <Link className=\"home-link\" to=\"/pagina-principal\">\n            Pagina principal\n          </Link>\n        </div>\n      ) : (\n        <div>\n          <div className=\"home-link-box\">\n            <Link className=\"home-link\" to=\"/signup\">\n              Clique aqui para se cadastrar!\n            </Link>\n          </div>\n          <div className=\"home-link-box\">\n            <Link className=\"home-link\" to=\"/login\">\n              Já tem cadastro? Entre aqui!\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <div className=\"home-about-box\">\n        <h2>Sobre</h2>\n        <hr />\n\n\n        <p className=\"home-about-text\">\n          Nosso Prédio é uma plataforma para disponibilização e compra de\n          serviços e produtos entre vizinhos. Ela foi criada com o intuito de\n          estimular pequenos negócios e o senso de comunidade entre os moradores\n          de condomínios. Você pode cadastrar seu condomínio, convidar seus\n          vizinhos para participarem do grupo, disponibilizar e comprar serviços\n          e/ou produtos.\n        </p>\n\n        <ul className=\"home-about-list\">\n          <li>\n            Você tem tempo livre e gostaria de se disponibilizar para passear\n            com os pets de seus vizinhos?\n          </li>\n          <li>\n            Você faz uma feijoada deliciosa e gostaria de oferecer como produto?\n          </li>\n          <li>Você sabe montar móveis e gostaria de oferecer esse serviço?</li>\n        </ul>\n        <h4>Junte-se ao Nosso Prédio!</h4>\n      </div>\n      <div className=\"home-about-box\">\n        <h2>Quem somos</h2>\n        <hr />\n        <div className=\"home-about-text-container\">\n          <div className=\"home-about-text\">\n            <img\n              src=\"https://res.cloudinary.com/juliajforesti/image/upload/v1589924085/nosso-predio/bf542bbc-bdbe-46a2-a6bc-e8d39c4f2d5f_2_zc0fhb.jpg\"\n              alt=\"\"\n            />\n            <h3>Gabriel Bohn</h3>\n            <img src=\"\" alt=\"\" />\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n          <div className=\"home-about-text\">\n            <img\n              src=\"https://res.cloudinary.com/juliajforesti/image/upload/v1589924069/nosso-predio/IMG_2847_r8kbbo.jpg\"\n              alt=\"\"\n            />\n            <h3>Julia Foresti</h3>\n            <img src=\"\" alt=\"\" />\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst ProtectedRoutes = ({component: Component, user, getUser, ...rest}) => {\n\n  return (\n    <Route {...rest} render={(props) => {\n      if (user) {\n        return <Component {...props} user={user} getUser={getUser}/>\n      } else {\n        return <Redirect to={{pathname:'/login', state:{from:props.location}}} />\n      }\n    }} />\n  )\n}\n\nexport default ProtectedRoutes;","import axios from \"axios\";\n\nclass MainService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  getUser(userId) {\n    return this.service\n      .get(`/user/${userId}`)\n      .then((response) => response.data);\n  }\n\n  getAllBuildings() {\n    return this.service\n      .get(\"/buildings\", {})\n      .then((buildings) => buildings.data);\n  }\n\n  addBuilding(name, cep, number) {\n    return this.service\n      .post(\"/add-building\", { name, cep, number }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getBuildingDetails(buildingId) {\n    return this.service\n      .get(`/building/${buildingId}`)\n      .then((response) => response.data);\n  }\n\n  addService(name, description, category, price, date, apartment, buildingId) {\n    return this.service\n      .post(`/building/${buildingId}/add-service`, {\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getAllServices() {\n    return this.service.get(\"/services\").then((response) => response.data);\n  }\n\n  getServiceDetails(buildingId, serviceId) {\n    return this.service\n      .get(`/building/${buildingId}/service/${serviceId}`)\n      .then((response) => response.data);\n  }\n\n  getAllOrders() {\n    return this.service.get(\"/orders\").then((response) => response.data);\n  }\n\n  addOrder(buildingId, serviceId, quantity) {\n    return this.service\n      .post(`/building/${buildingId}/service/${serviceId}/add-order`, {\n        quantity,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  buildingInvite(code) {\n    return this.service\n      .get(`building-invitation/${code}`, {new: true})\n      .then((response) => response.data);\n  }\n\n  changeStatus(buildingId, serviceId, orderId, status) {\n    return this.service\n      .post(\n        `/building/${buildingId}/service/${serviceId}/status-order/${orderId}`, {status}, {new: true}\n      )\n      .then((response) => response.data);\n  }\n\n  editBuilding(buildingId, name, cep, number){\n    return this.service.post(`/edit-building/${buildingId}`, {name, cep, number})\n    .then(response => response.data)\n  }\n\n  editBuildingPhoto(image, buildingId){\n    return this.service.post(`/edit-building-photo/${buildingId}`, image, {new: true})\n    .then(response => response.data)\n  }\n\n  editService(buildingId, serviceId, name, description, price, category, apartment, date){\n    return this.service.post(`/building/${buildingId}/edit-service/${serviceId}`, {name, description, price, category, apartment, date})\n    .then(response => response.data)\n  }\n\n  editServicePhoto(image, buildingId, serviceId){\n    return this.service\n    .post(`/building/${buildingId}/edit-service-photo/${serviceId}`, image, {new: true})\n    .then((response) => response.data)\n  }\n}\n\nexport default MainService;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ServicesList = (props) => {\n  return (\n    <div>\n      {props.services.map((service, idx) => {\n        return (\n          <div key={idx}>\n          <Link to={`/condominio/${service.building}/serviço/${service._id}`}>\n            <div className=\"card-box\">\n              <img className=\"card-img\" src={service.image} alt=\"\" />\n              <h3>{service.name}</h3>\n            </div>\n          </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ServicesList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nconst OrderList = (props) => {\n  const { orders } = props;\n  let statusAvailable = [\"Pendente\", \"Confirmado\", \"Entregue\", \"Cancelado\"];\n  return (\n    <div>\n      {orders.map((order, idx) => {\n        return (\n          <div key={idx} >\n            <Link\n              to={`/condominio/${order.service.building}/serviço/${order.service._id}`}\n            >\n              <div className=\"card-box order-card\"  >\n                <img className=\"card-img\" src={order.service.image}  alt='' />\n                <div>\n                  <h3>{order.service.name}</h3>\n                  <h5>Qtd: {order.quantity}</h5>\n                </div>\n                {/* USER CRIOU  */}\n                {props.user.services.includes(order.service._id) ? (\n                  <div className='card-order-right-side'>\n                    <p>Pedido por: {order.origin.name}</p>\n                    {order.status !== \"Cancelado\" ? (\n                      <form\n                        onChange={(e) =>\n                          props.handleStatus(\n                            order.service.building,\n                            order.service._id,\n                            order._id,\n                            e.target.value\n                          )\n                        }\n                      >\n                        <label>Status: </label>\n                        <select name=\"status\">\n                          <option value={order.status}>{order.status}</option>\n                          {statusAvailable\n                            .filter((elem) => elem !== order.status)\n                            .map((element, idx) => (\n                              <option key={idx} value={element}>\n                                {element}\n                              </option>\n                            ))}\n                        </select>\n                      </form>\n                    ) : (\n                      <p>Status: Cancelado</p>\n                    )}\n                  </div>\n                ) : (\n                  <div className='card-order-right-side'>\n                {/* USER PEDIU */}\n                    <p className='status-info'>Status do pedido: {order.status}</p>\n                    {order.status === \"Cancelado\" ? (\n                      <></>\n                    ) : (\n                      <button\n                        className='cancel-btn'\n                        onClick={(e) =>\n                          props.handleStatus(\n                            order.service.building,\n                            order.service._id,\n                            order._id,\n                            \"Cancelado\"\n                          )\n                        }\n                      >\n                        Cancelar pedido\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OrderList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainService from \"../MainService\";\nimport ServicesList from \"../service/ServicesList\";\nimport OrderList from \"../order/OrderList\";\nimport \"../css/MainPage.css\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      orders: [],\n      activeOrders: [],\n      services: [],\n      buildingApiCalled: false,\n      userApiCalled: false,\n      serviceApiCalled: false,\n      orderAPICalled: false,\n      toggleButton: false,\n      confirmationCode: \"\",\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    });\n  }\n\n  getUserUpdated() {\n    if (!this.state.userApiCalled) {\n      this.service.getUser(this.props.user._id).then((response) => {\n        this.props.getUser(response);\n        this.setState({\n          userApiCalled: true,\n        });\n      });\n    }\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin._id.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggle() {\n    this.setState({\n      toggleButton: !this.state.toggleButton,\n    });\n  }\n\n  handleToggleStatus() {\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton,\n    });\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    this.service\n      .buildingInvite(this.state.confirmationCode)\n      .then((response) => {\n        this.setState({\n          toggleButton: !this.state.toggleButton,\n          confirmationCode: \"\",\n          buildingApiCalled: false,\n          userApiCalled: false,\n        });\n      });\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) =>\n        this.setState({\n          orderAPICalled: false,\n        })\n      );\n  }\n\n  activeOrders() {\n    const orders = [...this.state.orders];\n    this.setState({\n      activeOrders: orders.filter((order) => order.status !== \"Cancelado\"),\n    });\n  }\n\n  render() {\n    this.getUserUpdated();\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <div className='main-page-title-box'>\n            <h1> Olá {this.props.user.name} </h1>\n          </div>\n          <div className='welcome-section'>\n            <p>Seja bem vindo(a) ao Nosso Prédio! </p>\n            <p>Você ainda não faz parte de nenhum condomínio da nossa rede.</p>\n          </div>\n          <div>\n              <div className=\"add-building-box\">\n                <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                  Criar Condominio\n                </Link>\n              </div>\n              <div className=\"invitation-code-box\">\n                <button\n                  className=\"invitation-code-btn\"\n                  onClick={() => this.handleToggle()}\n                >\n                  Já tem um convite? Clique aqui para inserir o código\n                </button>\n\n                {this.state.toggleButton ? (\n                  <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                    <input\n                      onChange={this.handleChangeCode}\n                      value={this.state.confirmationCode}\n                      type=\"text\"\n                      name=\"confirmationCode\"\n                      placeholder=\"insira seu código de acesso\"\n                    />\n                    <button type=\"submit\">Enviar</button>\n                  </form>\n                ) : (\n                  <></>\n                )}\n              </div>\n          </div>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      this.getUserServices();\n      this.getUserOrders();\n      return (\n        <div>\n          <div className='main-page-title-box'>\n            <h1> Olá {this.props.user.name} </h1>\n          </div>\n            <div>\n              <div className=\"add-building-box\">\n                <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                  Criar Condominio\n                </Link>\n              </div>\n              <div className=\"invitation-code-box\">\n                <button\n                  className=\"invitation-code-btn\"\n                  onClick={() => this.handleToggle()}\n                >\n                  Já tem um convite? Clique aqui para inserir o código\n                </button>\n\n                {this.state.toggleButton ? (\n                  <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                    <input\n                      onChange={this.handleChangeCode}\n                      value={this.state.confirmationCode}\n                      type=\"text\"\n                      name=\"confirmationCode\"\n                      placeholder=\"insira seu código de acesso\"\n                    />\n                    <button type=\"submit\">Enviar</button>\n                  </form>\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <div className=\"main-page-section-title-container\">\n                <Link\n                  className=\"main-page-section-title\"\n                  to=\"/meus-condominios\"\n                >\n                  Meus condominios\n                </Link>\n              </div>\n              {this.props.user.buildings.length > 3\n                ? this.state.buildings.slice(0, 3).map((building, idx) => {\n                    return (\n                      <div key={idx}>\n                        <Link to={`/condominio/${building._id}`}>\n                          <div className=\"card-box\">\n                            <img\n                              className=\"card-img\"\n                              src={building.image}\n                              alt=\"\"\n                            />\n                            <h3>{building.name}</h3>\n                            <p>CEP: {building.address.cep}</p>\n                          </div>\n                        </Link>\n                      </div>\n                    );\n                  })\n                : this.state.buildings.map((building, idx) => {\n                    return (\n                      <div key={idx}>\n                        <Link to={`/condominio/${building._id}`}>\n                          <div className=\"card-box\">\n                            <img\n                              className=\"card-img\"\n                              src={building.image}\n                              alt=\"\"\n                            />\n                            <h3>{building.name}</h3>\n                            <p>{building.address.cep}</p>\n                          </div>\n                        </Link>\n                      </div>\n                    );\n                  })}\n              {this.props.user.buildings.length > 3 ? (\n                <div className=\"see-more-box\">\n                  <Link className=\"see-more-btn\" to=\"/meus-condominios\">\n                    Ver mais\n                  </Link>\n                </div>\n              ) : (\n                <div></div>\n              )}\n\n              <div className=\"main-page-section-title-container\">\n                <Link className=\"main-page-section-title\" to=\"/meus-serviços\">\n                  Meus serviços e produtos\n                </Link>\n              </div>\n              <div>\n                {this.props.user.services.length > 0 ? (\n                  <ServicesList\n                    services={this.state.services}\n                    {...this.props}\n                  ></ServicesList>\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <div className=\"main-page-section-title-container\">\n                <Link className=\"main-page-section-title\" to=\"/meus-pedidos\">\n                  Meus pedidos\n                </Link>\n              </div>\n              <div>\n                <div className='see-more-box'>\n                  <button className='see-more-btn' onClick={this.handleToggleStatus}>\n                    {this.state.toggleStatusButton\n                      ? \"Mostrar todos os pedidos\"\n                      : \"Mostrar somente pedidos ativos\"}\n                  </button>\n                </div>\n                {this.state.toggleStatusButton ? (\n                  <OrderList\n                    activeOrders={this.activeOrders}\n                    handleStatus={this.handleStatus}\n                    orders={this.state.orders.filter(\n                      (order) => order.status !== \"Cancelado\"\n                    )}\n                    {...this.props}\n                  />\n                ) : (\n                  <OrderList\n                    handleStatus={this.handleStatus}\n                    orders={this.state.orders}\n                    {...this.props}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n      );\n    }\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass AddBuilding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      cep: \"\",\n      number: \"\",\n      border: null,\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { name, cep, number } = this.state;\n    this.service.addBuilding(name, cep, number).then((response) => {\n      if (response.message) {\n        //arrumar um jeito melhor de mandar essa mensagem\n        this.setState({\n          duplicate:\n            \"Este prédio já está cadastrado, entre em contato com seus vizinhos para conseguir o link de acesso.\",\n          border: \"2px solid red\",\n        });\n        return;\n      }\n      this.props.history.push(\"/pagina-principal\");\n    });\n    console.log(this.props);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h1 className=\"auth-title\">Adicione seu Condomínio</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-item\">\n              <label>Nome:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                className=\"form-input\"\n                value={this.state.name}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>CEP:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"cep\"\n                style={{ border: this.state.border }}\n                className=\"form-input\"\n                value={this.state.cep}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>Número:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"number\"\n                style={{ border: this.state.border }}\n                name=\"number\"\n                className=\"form-input\"\n                value={this.state.number}\n              />\n            </div>\n\n            <button\n              style={{ width: \"200px\", border: this.state.border }}\n              className=\"form-input-submit\"\n              type=\"submit\"\n            >\n              Adicionar Condomínio\n            </button>\n          </form>\n          <br />\n          {this.state.duplicate ? (\n            <div className=\"add-building-err\">\n              <p>{this.state.duplicate}</p>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddBuilding;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditBuilding extends Component {\n  constructor(props) {\n    super(props);\n    const { name } = this.props.building;\n    const { cep, number } = this.props.building.address;\n\n    this.state = {\n      name: name,\n      cep: cep,\n      number: number,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.building._id;\n    const { name, cep, number } = this.state;\n    this.service\n      .editBuilding(buildingId, name, cep, number)\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedBuilding(response);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    console.log(e.target.files[0])\n\n    uploadData.append(\"image\", e.target.files[0]);\n    const buildingId = this.props.building._id;\n\n    this.service.editBuildingPhoto(uploadData, buildingId)\n    .then((response) => {\n      console.log(response)\n      this.props.getEditedBuilding(response);\n      this.props.handleClick();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <label>Alterar imagem:</label>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>cep:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"cep\"\n            value={this.state.cep}\n          ></input>\n          <label>Número:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditBuilding;\n","import React, { Component } from \"react\";\n\nexport default class InviteLink extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      copySuccess: false,\n    };\n  }\n\n  copyCodeToClipboard = () => {\n    this.setState({\n      copySuccess: true,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <p>Código de acesso: {this.props.code}</p>\n        </div>\n        <div>\n          <button onClick={() => {\n            navigator.clipboard.writeText(`http://nosso-predio.herokuapp.com/convite/${this.props.code}`);\n            this.copyCodeToClipboard();\n          }}>\n            Copiar link\n          </button>\n          {this.state.copySuccess ? (\n            <div style={{ color: \"green\" }}>Copiado!</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport ServicesList from \"../service/ServicesList\";\nimport EditBuilding from \"./EditBuilding\";\nimport InviteLink from \"./InviteLink\";\nimport '../css/DetailsPage.css';\n\nclass BuildingDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      building: {},\n      services: [],\n      search: \"\",\n      buildingApiCalled: false,\n      serviceApiCalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleClick = this.handleClick.bind(this);\n    this.getEditedBuilding = this.getEditedBuilding.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getBuildingDetails() {\n    if (!this.state.buildingApiCalled) {\n      const { params } = this.props.match;\n      this.service.getBuildingDetails(params.id).then((response) => {\n        this.setState({\n          building: response,\n          buildingApiCalled: true,\n        });\n      });\n    }\n  }\n\n  getEditedBuilding(newBuilding) {\n    console.log();\n    this.setState({\n      building: newBuilding,\n    });\n  }\n\n  getBuildingServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.building.includes(this.state.building._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    this.getBuildingDetails();\n    this.getBuildingServices();\n    return (\n      <div>\n        <div>\n          {/* <img className='details-page-img' src={this.state.building.image} alt={this.state.building.name} /> */}\n          <h1 className='details-page-title'>{this.state.building.name}</h1>\n          {this.props.user._id === this.state.building.owner ? (\n            <div>\n            <InviteLink code={this.state.building.confirmationCode} />\n            <button className='details-btn' onClick={this.handleClick}>Editar</button>\n              {this.state.toggleEdit ? (\n                <EditBuilding\n                  getEditedBuilding={this.getEditedBuilding}\n                  building={this.state.building}\n                  handleClick={this.handleClick}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n        <h2 className='details-section-title'>Serviços/Produtos disponíveis</h2>\n        <div className='details-btn'>\n          <Link className='details-link' to={`/condominio/${this.state.building._id}/adicionar-serviço`}>\n            Adicionar Serviço/Produto\n          </Link>\n        </div>\n        <ServicesList services={this.state.services} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default BuildingDetails;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\n\nclass BuildingsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      search: \"\",\n      buildingApiCalled: false,\n      toggleButton: false,\n      confirmationCode: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  handleToggle() {\n    this.setState({\n      toggleButton: !this.state.toggleButton,\n    });\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    });\n  }\n\n  handleOnSubmit(e){\n    e.preventDefault()\n    this.service.buildingInvite(this.state.confirmationCode).then(response => {\n      this.setState({\n        toggleButton: !this.state.toggleButton,\n        confirmationCode: '',\n        buildingApiCalled:false,\n      })\n    })\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <h1> Meus condominios </h1> <br />\n          <div>\n            <div>\n              <Link to=\"/adicionar-condominio\">Adicionar Condominio</Link>{\" \"}\n              <br /> <br />\n            <h1>Você ainda não tem nenhum condominio, entre peça o link para seus vizinhos ou crie!</h1>\n            <br /> <br />\n              <button onClick={() => this.handleToggle()}>\n                Já tem um convite? Junte-se ao seu condomínio\n              </button>{\" \"}\n              <br /> <br />\n              {this.state.toggleButton ? (\n                <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                  <input\n                    onChange={this.handleChangeCode}\n                    value={this.state.confirmationCode}\n                    type=\"text\"\n                    name=\"confirmationCode\"\n                    placeholder=\"insira seu código de acesso\"\n                  />\n                  <button type=\"submit\">Enviar</button>\n                </form>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      return (\n        <div>\n          <h1> Meus condominios </h1>\n          <div>\n            <Link to=\"/adicionar-condominio\">Adicionar Condominio</Link> <br />{\" \"}\n            <br />\n            <button onClick={() => this.handleToggle()}>\n              Já tem um convite? Junte-se ao seu condomínio\n            </button>{\" \"}\n            <br /> <br />\n            {this.state.toggleButton ? (\n              <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                <input\n                  onChange={this.handleChangeCode}\n                  value={this.state.confirmationCode}\n                  type=\"text\"\n                  name=\"confirmationCode\"\n                  placeholder=\"insira seu código de acesso\"\n                />\n                <button type=\"submit\">Enviar</button>\n              </form>\n            ) : (\n              <></>\n            )}\n          </div>\n          <div>\n            <br />\n            <input\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar pelo nome\"\n            />\n          </div>\n\n          <div>\n            {this.state.buildings\n              .filter((elem) => {\n                return elem.name.toLowerCase().includes(this.state.search);\n              })\n              .map((building, idx) => {\n                return (\n                  <div key={idx} className=\"building-box\">\n                    <h1>{building.name}</h1>\n                    <Link to={`/condominio/${building._id}`}>Acessar</Link>\n                  </div>\n                );\n              })}\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default BuildingsPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass AddService extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      category: \"Produto\",\n      price: \"\",\n      date: \"\",\n      apartment: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { params } = this.props.match;\n    const buildingId = params.id;\n    const { name, description, category, price, date, apartment } = this.state;\n\n    this.service\n      .addService(\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n        buildingId\n      )\n      .then((response) => {\n        this.props.history.push(`/condominio/${buildingId}`);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h1 className=\"auth-title\">Adicione seu Serviço/Produto</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-item\">\n              <label>Nome:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                className=\"form-input\"\n                name=\"name\"\n                value={this.state.name}\n                placeholder='Cookies do bem'\n              />\n            </div>\n            <div className=\"form-item\">\n              <label>Descrição:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text-area\"\n                name=\"description\"\n                value={this.state.description}\n                placeholder='Cookies caseiros feitos com muito amor e carinho'\n              />\n            </div>\n            <div className=\"form-item\">\n              <label>Categoria:</label> <br />\n              <select onChange={this.handleChange} name=\"category\">\n                <option value=\"Produto\">Produto</option>\n                <option value=\"Serviço\">Serviço</option>\n              </select>\n            </div>\n            <div className=\"form-item\">\n              <label>Preço:</label> <br />\n              <input\n              className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"price\"\n                value={this.state.price}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>Data:</label> <br />\n              <input\n              className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"date\"\n                name=\"date\"\n                value={this.state.date}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>Complemento:</label> <br />\n              <input\n              className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"apartment\"\n                value={this.state.apartment}\n                placeholder='Apt. 103'\n              />\n            </div>\n\n            <button className=\"form-button\" type=\"submit\">\n              Adicionar serviço\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass OrderForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { quantity: 0 };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      quantity: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { quantity } = this.state;\n    const { service, building } = this.props;\n\n    this.service\n      .addOrder(building, service, quantity)\n      .then((response) => {\n        this.setState({\n          quantity: 0,\n        });\n        this.props.history.push(`/meus-pedidos`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div className=\"\">\n          <div className=\"\">\n            <label>Quantidade:</label>\n            <input\n              className=\"\"\n              type=\"number\"\n              name=\"quantity\"\n              value={this.state.quantity}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        <input className=\"button\" type=\"submit\" value=\"Pedir\" />\n      </form>\n    );\n  }\n}\n\nexport default OrderForm;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      description,\n      category,\n      price,\n      date,\n      apartment,\n    } = this.props.service;\n    this.state = {\n      name: name,\n      description: description,\n      category: category,\n      price: price,\n      date: date,\n      apartment: apartment,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.service.building;\n    const serviceId = this.props.service._id;\n\n    const { name, description, price, category, apartment, date } = this.state;\n    this.service\n      .editService(\n        buildingId,\n        serviceId,\n        name,\n        description,\n        price,\n        category,\n        apartment,\n        date\n      )\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedService(response);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    uploadData.append(\"image\", e.target.files[0]);\n    const buildingId = this.props.service.building;\n    const serviceId = this.props.service._id;\n\n    this.service\n      .editServicePhoto(uploadData, buildingId, serviceId)\n      .then((response) => {\n        this.props.getEditedService(response);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <label>Alterar imagem:</label>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>Descrição:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"description\"\n            value={this.state.description}\n          ></input>\n          <label>Preço:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"number\"\n            name=\"price\"\n            value={this.state.price}\n          ></input>\n          <label>Categoria:</label>\n          {this.props.service.category === \"Produto\" ? (\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Produto\">Produto</option>\n              <option value=\"Serviço\">Serviço</option>\n            </select>\n          ) : (\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Serviço\">Serviço</option>\n              <option value=\"Produto\">Produto</option>\n            </select>\n          )}\n          <label>Complemento:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"apartment\"\n            value={this.state.apartment}\n          ></input>\n          <label>Data:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"date\"\n            name=\"date\"\n            value={this.state.date}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport OrderList from \"../order/OrderList\";\nimport OrderForm from \"../order/OrderForm\";\nimport EditService from \"./EditService\";\n\nclass ServiceDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: {},\n      orders: [],\n      serviceAPICalled: false,\n      orderAPICalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleStatus = this.handleStatus.bind(this);\n    this.getEditedService = this.getEditedService.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getServiceDetails() {\n    if (!this.state.serviceAPICalled) {\n      const { params } = this.props.match;\n      this.service\n        .getServiceDetails(params.id, params.servicoId)\n        .then((response) => {\n          this.setState({\n            service: response,\n            serviceAPICalled: true,\n          });\n        });\n    }\n  }\n\n  getServiceOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.service._id.includes(this.state.service._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n  \n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => console.log(response));\n  }\n\n  getEditedService(newService) {\n    this.setState({\n      service: newService,\n    });\n  }\n\n  render() {\n    this.getServiceDetails();\n    this.getServiceOrders();\n    return (\n      <div>\n        <Link\n          to={`/condominio/${this.state.service.building}/adicionar-serviço`}\n        >\n          Adicionar Serviço/Produto\n        </Link>\n        <br />\n        <h1>{this.state.service.name}</h1>\n        <h4>{this.state.service.date}</h4>\n        <p>{this.state.service.category}</p>\n        <p>{this.state.service.description}</p>\n        <img src={this.state.service.image} alt={this.state.service.name} />\n\n      \n        {this.state.service.owner === this.props.user._id ? (\n          <div>\n        <Link to='/pagina-principal'><button>Voltar</button></Link>\n            {!this.state.toggleEdit ? (\n              <>\n            <button onClick={this.handleClick}>Editar</button>\n              </>\n            ) : (\n              <EditService\n                handleClick={this.handleClick}\n                getEditedService={this.getEditedService}\n                service={this.state.service}\n              />\n            )}\n            <h3>Pedidos:</h3>\n            <OrderList\n              handleStatus={this.handleStatus}\n              building={this.state.service.building}\n              orders={this.state.orders}\n              {...this.props}\n            />\n          </div>\n        ) : (\n          <div>\n        <Link to={`/condominio/${this.state.service.building}`}><button>Voltar</button></Link>\n            <h3>Faça seu pedido</h3>\n            <OrderForm {...this.props} service={this.state.service._id} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ServiceDetails;\n","import React, { Component } from \"react\";\nimport AuthService from \"../auth/AuthService\";\nimport \"../css/Profile.css\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    const { user } = this.props;\n    this.state = {\n      toggleEdit: false,\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      passwordConfirmation: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n\n    this.service = new AuthService();\n  }\n\n  handleClick() {\n    this.setState({ toggleEdit: !this.state.toggleEdit });\n  }\n\n  handleFormSubmit(e) {\n    console.log(this.props);\n    e.preventDefault();\n    const { email, name } = this.state;\n    const userId = this.props.user._id;\n    this.service.edit(email, name, userId).then((response) => {\n      this.props.getUser(response);\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      });\n    });\n  }\n\n  handlePasswordSubmit(e) {\n    e.preventDefault();\n    const { password, passwordConfirmation } = this.state;\n    const userId = this.props.user._id;\n    if (password === passwordConfirmation) {\n      this.service.editPassword(password, userId).then((response) =>\n        this.setState({\n          toggleEdit: !this.state.toggleEdit,\n        })\n      );\n    } else {\n      return;\n    }\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    uploadData.append(\"image\", e.target.files[0]);\n\n    this.service.editPhoto(uploadData, this.props.user._id).then((response) => {\n      this.props.getUser(response);\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      });\n    });\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div className=\"profile-container\">\n        <div className=\"title-container\">\n          <h1 className=\"profile-title\">Meu Perfil</h1>\n        </div>\n\n        <div className=\"edit-container\">\n          <button className=\"edit-btn\" onClick={this.handleClick}>\n          \n          {!this.state.toggleEdit ? \"Editar\" : \"Voltar\"}\n            \n          </button>\n          {!this.state.toggleEdit ? (\n            <div className=\"profile-info\">\n              <h3>Nome: {user.name}</h3>\n              <h3>Email: {user.email}</h3>\n              <img className=\"profile-img\" src={user.image} alt={user.name} />\n            </div>\n          ) : (\n            <div>\n              <form className=\"edit-form\" onSubmit={this.handleFormSubmit}>\n                <label>Nome:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                ></input>\n                <label>Email:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                ></input>\n                <button className='save-btn' type=\"submit\">Salvar</button>\n              </form>\n              <form className=\"edit-password-container\" onSubmit={this.handlePasswordSubmit}>\n                  <label>Senha:</label>\n                  <input\n                    onChange={this.handleChange}\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                  ></input>\n                  <label>Confirme sua senha:</label>\n                  <input\n                    onChange={this.handleChange}\n                    type=\"password\"\n                    name=\"passwordConfirmation\"\n                    value={this.state.passwordConfirmation}\n                  ></input>\n                  <button className='save-btn' type=\"submit\">Salvar</button>\n                </form>\n\n              <div className=\"edit-photo-container\">\n                <label>Alterar foto de perfil:</label>\n                <input onChange={this.handleFileUpload} type=\"file\" />\n              </div>\n\n                \n\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport ServicesList from \"../service/ServicesList\";\nimport { Link } from \"react-router-dom\";\n\n\nclass ServicesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      services: [],\n      search: \"\",\n      serviceApiCalled: false,\n    };\n    this.service = new MainService();\n\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // IF USER DOESNT HAVE BUILDINGS\n    this.getUserServices();\n    if (this.props.user.services.length < 1) {\n      return (\n        <div>\n          <h1> Meus serviços/produtos </h1> <br />\n          <div>\n            <h1>Você ainda não tem nenhum serviço, entre em um dos seus condominios e crie um!</h1>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      return (\n        <div>\n          <h1> Meus serviços/produtos </h1>\n          <div>\n            <br />\n            <input\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar pelo nome\"\n            />\n          </div>\n\n          <div>\n          <ServicesList\n                services={this.state.services\n                    .filter((elem) => {\n                      return elem.name.toLowerCase().includes(this.state.search);\n                    })}\n                {...this.props}\n              ></ServicesList>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ServicesPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport OrderList from \"./OrderList\";\nimport { Link } from \"react-router-dom\";\n\n\nclass OrdersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        orders: [],\n        activeOrders:[],\n      search: \"\",\n      orderAPICalled: false,\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin._id.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggleStatus(){\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton\n    })\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => this.setState({\n        orderAPICalled: false\n      })\n      );\n  }\n\n  activeOrders(){\n    const orders = [...this.state.orders]\n    this.setState({\n      activeOrders: orders.filter(order => order.status !== \"Cancelado\")\n    })\n  }\n\n  render() {\n    // IF USER DOESNT HAVE ORDERS\n    this.getUserOrders();\n    if (this.state.orders.length < 1) {\n      return (\n        <div>\n          <h1> Meus pedidos </h1> <br />\n          <div>\n            <h1>Você ainda não tem nenhum pedido, acesse um de seus condominios e peça!</h1>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n\n      // IF USER HAS ORDERS\n    } else {\n      return (\n        <div>\n          <h1> Meus pedidos </h1>\n          <div>\n          <button onClick={this.handleToggleStatus}>\n              {this.state.toggleStatusButton ? ('Mostrar todos os pedidos') : ('Mostrar somente pedidos ativos')}\n              </button>\n              {this.state.toggleStatusButton ? (\n                <OrderList activeOrders={this.activeOrders} handleStatus={this.handleStatus} orders={this.state.orders.filter(order => order.status !== \"Cancelado\")} {...this.props} />\n              ):(\n                <OrderList handleStatus={this.handleStatus} orders={this.state.orders} {...this.props}/>\n              )}\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default OrdersPage;\n","import React, { Component } from 'react';\nimport MainService from '../MainService'\n\nclass InvitePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n        this.service = new MainService();\n        this.inviteCode = this.inviteCode.bind(this)\n    }\n\n    inviteCode(){\n        const {invitationCode} = this.props.match.params\n        this.service.buildingInvite(invitationCode).then(response => {\n        //   this.props.getUser(response)\n          this.props.history.push(`/pagina-principal`);\n        })\n      }\n\n    render() { \n        this.inviteCode()\n        console.log(this.props)\n        return ( <div>\n            <h1>Encontrando seu predio</h1>\n        </div> );\n    }\n}\n \nexport default InvitePage;","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst RedirectToMain = _ => {\n    return (\n        <Redirect to=\"/\" />\n    );\n}\n\nexport default RedirectToMain","import React from \"react\";\nimport \"../css/Footer.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineHome, AiOutlineUser } from \"react-icons/ai\";\nimport { FaRegBuilding } from \"react-icons/fa\";\n\nconst Footer = (props) => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-top\">\n\n        <Link className=\"footer-link\" to=\"/pagina-principal\">\n          <AiOutlineHome className='footer-icon' />\n          Página Principal\n        </Link>\n\n        <Link className=\"footer-link\" to=\"/meus-condominios\">\n          <FaRegBuilding className='footer-icon' />\n          Meus Condomínios\n        </Link>\n\n        <Link className=\"footer-link\" to=\"/perfil\">\n          <AiOutlineUser className='footer-icon' />\n          Perfil\n        </Link>\n      </div>\n      {/* <div className=\"footer-bottom\">\n        <div>\n          <p className=\"footer-title\"> Nosso Prédio </p>\n        </div>\n        <div>\n          <p className=\"footer-by\">por </p>\n          <p className=\"footer-by\">Gabriel Bohn e Júlia Foresti</p>\n        </div>\n      </div> */}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./components/css/Home.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Home from \"./components/Home\";\nimport ProtectedRoutes from \"./components/auth/ProtectedRoutes\";\nimport MainPage from \"./components/user/MainPage\";\nimport AddBuilding from \"./components/building/AddBuilding\";\nimport BuildingDetails from \"./components/building/BuildingDetails\";\nimport BuildingsPage from \"./components/building/BuildingsPage\";\nimport AddService from \"./components/service/AddService\";\nimport ServiceDetails from \"./components/service/ServiceDetails\";\nimport ProfilePage from \"./components/user/ProfilePage\";\nimport ServicesPage from \"./components/service/ServicesPage\";\nimport OrdersPage from \"./components/order/OrdersPage\";\nimport InvitePage from \"./components/building/InvitePage\";\nimport RedirectToMain from \"./components/RedirectToMain\";\nimport 'bulma/css/bulma.css';\nimport Footer from './components/footer/Footer'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedUser: null,\n    };\n    this.service = new AuthService();\n\n    this.getUser = this.getUser.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedUser === null) {\n      this.service\n        .loggedin()\n        .then((response) => {\n          this.setState({\n            loggedUser: response,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            loggedUser: false,\n          });\n        });\n    }\n  }\n\n  getUser(user) {\n    this.setState({\n      loggedUser: user,\n    });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then((response) => {\n        this.setState({\n          loggedUser: null,\n        });\n        this.props.history.push(`/`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    this.fetchUser();\n    return (\n      <div className=\"app-outer-container\">\n        {this.state.loggedUser ? (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n\n            <div className=\"app-container\">\n              <Switch>\n                <Route exact path=\"/\" render={(props) => <Home user={this.state.loggedUser} {...props} />}/>\n                <ProtectedRoutes\n                  exact\n                  path=\"/pagina-principal\"\n                  component={MainPage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/adicionar-condominio\"\n                  component={AddBuilding}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id\"\n                  component={BuildingDetails}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id/adicionar-serviço\"\n                  component={AddService}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id/serviço/:servicoId\"\n                  component={ServiceDetails}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-condominios\"\n                  component={BuildingsPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-serviços\"\n                  component={ServicesPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-pedidos\"\n                  component={OrdersPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/convite/:invitationCode\"\n                  component={InvitePage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/perfil\"\n                  component={ProfilePage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                {/* this route will catch any route that wasnt matched in previous routes */}\n                <Route component={RedirectToMain} />\n              </Switch>\n            </div>\n            <Footer />\n          </div>\n        ) : (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n            <div className=\"app-container\">\n              <Switch>\n                <Route exact path=\"/\"  render={(props) => <Home user={this.state.loggedUser} {...props} />} />\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={(props) => (\n                    <Signup getUser={this.getUser} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={(props) => (\n                    <Login getUser={this.getUser} {...props} />\n                  )}\n                />\n                <Route component={RedirectToMain} />\n              </Switch>\n            </div>\n            <Footer />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}