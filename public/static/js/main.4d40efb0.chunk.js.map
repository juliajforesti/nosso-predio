{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/Home.js","components/auth/ProtectedRoutes.js","components/MainService.js","components/service/ServicesList.js","components/order/OrderList.js","components/user/MainPage.js","components/building/AddBuilding.js","components/building/EditBuilding.js","components/building/InviteLink.js","components/building/BuildingDetails.js","components/building/BuildingsPage.js","components/service/AddService.js","components/order/OrderForm.js","components/service/EditService.js","components/service/ServiceDetails.js","components/user/ProfilePage.js","components/service/ServicesPage.js","components/order/OrdersPage.js","components/building/InvitePage.js","components/RedirectToMain.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","user","onClick","logout","AuthService","this","service","axios","create","baseURL","process","withCredentials","email","password","name","post","then","response","data","get","userId","new","image","Signup","state","errorMessage","handleChange","bind","handleFormSubmit","responseGoogle","e","target","value","setState","preventDefault","signup","getUser","history","push","catch","err","googleLogin","resp","console","log","onSubmit","type","onChange","length","disabled","href","Component","Login","login","Home","src","alt","ProtectedRoutes","component","rest","render","pathname","from","location","MainService","buildings","cep","number","buildingId","description","category","price","date","apartment","serviceId","quantity","code","orderId","status","ServicesList","services","map","idx","key","building","_id","OrderList","orders","statusAvailable","order","includes","origin","handleStatus","filter","elem","element","MainPage","activeOrders","buildingApiCalled","userApiCalled","serviceApiCalled","orderAPICalled","toggleButton","confirmationCode","toggleStatusButton","handleChangeCode","handleOnSubmit","handleToggleStatus","getAllBuildings","residents","getAllServices","owner","getAllOrders","buildingInvite","changeStatus","getUserUpdated","getBuildings","handleToggle","placeholder","getUserBuildings","getUserServices","getUserOrders","slice","address","AddBuilding","handleSubmit","addBuilding","EditBuilding","handleFileUpload","editBuilding","handleClick","getEditedBuilding","uploadData","FormData","files","append","editBuildingPhoto","InviteLink","copyCodeToClipboard","copySuccess","navigator","clipboard","writeText","style","color","BuildingDetails","search","toggleEdit","params","match","getBuildingDetails","id","newBuilding","getBuildingServices","BuildingsPage","handleChangeSearch","toLowerCase","AddService","addService","OrderForm","addOrder","EditService","editService","getEditedService","editServicePhoto","ServiceDetails","serviceAPICalled","getServiceDetails","servicoId","newService","getServiceOrders","ProfilePage","passwordConfirmation","handlePasswordSubmit","edit","editPassword","editPhoto","ServicesPage","OrdersPage","InvitePage","inviteCode","invitationCode","RedirectToMain","_","App","loggedUser","loggedin","fetchUser","exact","path","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4d40efb0.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"nav-main-box\">\n      <div className=\"nav-left-side\">\n        <NavLink className='nav-link-left' to=\"/\">Nosso Predio</NavLink>\n      </div>\n      <div >\n        {!props.user ? (\n          <div className=\"nav-right-side\">\n              <NavLink className='nav-link-right' to=\"/signup\">Signup</NavLink>\n              <NavLink className='nav-link-right' to=\"/login\">Login</NavLink>\n          </div>\n        ) : (\n          <div className='nav-right-side'>\n            <NavLink className='nav-link-right' to='/perfil'>Perfil</NavLink>\n            <button className='logout-btn' onClick={() => props.logout()}>Logout</button>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  signup(email, password, name) {\n    return this.service\n      .post(\"/signup\", { email, password, name })\n      .then((response) => (\n        response.data\n        ));\n  }\n\n  login(email, password) {\n    return this.service\n      .post(\"/login\", { email, password })\n      .then((response) => response.data)\n  }\n\n  googleLogin(){\n    return this.service.get('/auth/google')\n    .then(response => response.data)\n  }\n\n  logout() {\n    return this.service\n    .get(\"/logout\", {})\n    .then((response) => response.data);\n  }\n\n  loggedin() {\n    return this.service\n    .get('/loggedin', {})\n    .then((response) => response.data)\n  }\n\n  edit(email, name, userId){\n    return this.service\n    .post(`/edit-user/${userId}`, {email, name}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPassword( password, userId){\n    return this.service\n    .post(`/edit-password/${userId}`, {password}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPhoto(image, userId){\n    return this.service\n    .post(`/edit-photo/${userId}`, image, {new: true})\n    .then((response) => response.data)\n  }\n\n}\n\nexport default AuthService;\n","// auth/Signup.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"./Auth.css\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      errorMessage: null,\n    };\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { email, password, name } = this.state;\n    this.service\n      .signup(email, password, name)\n      .then((response) => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n          name: \"\",\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/pagina-principal\");\n      })\n      .catch((err) => {\n        this.setState({\n          errorMessage: \"Email já cadastrado\",\n        });\n      });\n  }\n\n  responseGoogle(response) {\n    this.service\n      .googleLogin()\n      .then((resp) => console.log(\"RESP:\", resp))\n      .catch((err) => console.log(err));\n    console.log(\"RESPONSE:\", response);\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h2 className=\"auth-title\">Cadastrar</h2>\n        <p>\n          Já tem uma conta?\n          <Link to={\"/login\"}> Entre aqui!</Link>\n        </p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-item\">\n            <label>Nome:</label> <br />\n            <input\n              className=\"\"\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Email:</label> <br />\n            <input\n              className=\"\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Senha:</label> <br />\n            <input\n              className=\"\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <p className='password-warning'>Crie uma senha com no mínimo 6 caracteres</p>\n          </div>\n          {this.state.password.length < 6 ? (\n            <input\n              disabled\n              className=\"auth-button\"\n              type=\"submit\"\n              value=\"Signup\"\n            />\n          ) : (\n            <input className=\"auth-button\" type=\"submit\" value=\"Signup\" />\n          )}\n        </form>\n\n        <div className='auth-google'>\n        <p className='auth-alternative'>Ou então entre com sua conta Google/Facebook</p>\n        <a href=\"http://localhost:5000/api/auth/google\">GOOGLE</a>\n        <a href=\"http://localhost:5000/api/auth/facebook\">FACEBOOK</a>\n          />\n        </div>\n        <p>{this.state.errorMessage}</p>\n\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","// auth/Login.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"./Auth.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: null,\n    };\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { email, password } = this.state;\n    this.service\n      .login(email, password)\n      .then((response) => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/pagina-principal\");\n      })\n      .catch((err) => {\n        this.setState({\n          errorMessage: \"Email e/ou senha incorretos\",\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h2 className=\"auth-title\">Entrar</h2>\n        <p>\n          Não tem uma conta?\n          <Link to={\"/signup\"}> Cadastre-se</Link>\n        </p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-item\">\n            <label>Email:</label> <br/>\n            <input\n              className=\"\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Senha:</label> <br/>\n            <input\n              className=\"\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input className=\"auth-button\" type=\"submit\" value=\"Entrar\" />\n        </form>\n        <div>\n          <p>{this.state.errorMessage}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n\nconst Home = (props) => {\n  return (\n    <div>\n      <div className=\"home-title\">\n        <h1>Nosso Prédio</h1>\n      </div>\n      {props.user ? (\n        <div className=\"home-link-box\">\n          <Link className=\"home-link\" to=\"/pagina-principal\">\n            Pagina principal\n          </Link>\n        </div>\n      ) : (\n        <div>\n          <div className=\"home-link-box\">\n            <Link className=\"home-link\" to=\"/signup\">\n              Clique aqui para se cadastrar!\n            </Link>\n          </div>\n          <div className=\"home-link-box\">\n            <Link className=\"home-link\" to=\"/login\">\n              Já tem cadastro? Entre aqui!\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <div className=\"home-about-box\">\n        <h2>Sobre</h2>\n        <hr />\n        <p className=\"home-about-text\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Cras\n          adipiscing enim eu turpis egestas. Ullamcorper morbi tincidunt ornare\n          massa eget egestas purus. Sapien faucibus et molestie ac feugiat sed\n          lectus vestibulum mattis. Ultrices mi tempus imperdiet nulla malesuada\n          pellentesque elit.\n        </p>\n      </div>\n      <div className=\"home-about-box\">\n        <h2>Quem somos</h2>\n        <hr />\n        <div className=\"home-about-text-container\">\n          <div className=\"home-about-text\">\n          <img src='https://res.cloudinary.com/juliajforesti/image/upload/v1589924085/nosso-predio/bf542bbc-bdbe-46a2-a6bc-e8d39c4f2d5f_2_zc0fhb.jpg' alt=''/>\n            <h3>Gabriel Bohn</h3>\n            <img src=\"\" alt=\"\" />\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. \n            </p>\n          </div>\n          <div className=\"home-about-text\">\n            <img src='https://res.cloudinary.com/juliajforesti/image/upload/v1589924069/nosso-predio/IMG_2847_r8kbbo.jpg' alt=''/>\n            <h3>Julia Foresti</h3>\n            <img src=\"\" alt=\"\" />\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst ProtectedRoutes = ({component: Component, user, getUser, ...rest}) => {\n\n  return (\n    <Route {...rest} render={(props) => {\n      if (user) {\n        return <Component {...props} user={user} getUser={getUser}/>\n      } else {\n        return <Redirect to={{pathname:'/login', state:{from:props.location}}} />\n      }\n    }} />\n  )\n}\n\nexport default ProtectedRoutes;","import axios from \"axios\";\n\nclass MainService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  getUser(userId) {\n    return this.service\n      .get(`/user/${userId}`)\n      .then((response) => response.data);\n  }\n\n  getAllBuildings() {\n    return this.service\n      .get(\"/buildings\", {})\n      .then((buildings) => buildings.data);\n  }\n\n  addBuilding(name, cep, number) {\n    return this.service\n      .post(\"/add-building\", { name, cep, number }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getBuildingDetails(buildingId) {\n    return this.service\n      .get(`/building/${buildingId}`)\n      .then((response) => response.data);\n  }\n\n  addService(name, description, category, price, date, apartment, buildingId) {\n    return this.service\n      .post(`/building/${buildingId}/add-service`, {\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getAllServices() {\n    return this.service.get(\"/services\").then((response) => response.data);\n  }\n\n  getServiceDetails(buildingId, serviceId) {\n    return this.service\n      .get(`/building/${buildingId}/service/${serviceId}`)\n      .then((response) => response.data);\n  }\n\n  getAllOrders() {\n    return this.service.get(\"/orders\").then((response) => response.data);\n  }\n\n  addOrder(buildingId, serviceId, quantity) {\n    return this.service\n      .post(`/building/${buildingId}/service/${serviceId}/add-order`, {\n        quantity,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  buildingInvite(code) {\n    return this.service\n      .get(`building-invitation/${code}`, {new: true})\n      .then((response) => response.data);\n  }\n\n  changeStatus(buildingId, serviceId, orderId, status) {\n    return this.service\n      .post(\n        `/building/${buildingId}/service/${serviceId}/status-order/${orderId}`, {status}, {new: true}\n      )\n      .then((response) => response.data);\n  }\n\n  editBuilding(buildingId, name, cep, number){\n    return this.service.post(`/edit-building/${buildingId}`, {name, cep, number})\n    .then(response => response.data)\n  }\n\n  editBuildingPhoto(image, buildingId){\n    return this.service.post(`/edit-building-photo/${buildingId}`, image, {new: true})\n    .then(response => response.data)\n  }\n\n  editService(buildingId, serviceId, name, description, price, category, apartment, date){\n    return this.service.post(`/building/${buildingId}/edit-service/${serviceId}`, {name, description, price, category, apartment, date})\n    .then(response => response.data)\n  }\n\n  editServicePhoto(image, buildingId, serviceId){\n    return this.service\n    .post(`/building/${buildingId}/edit-service-photo/${serviceId}`, image, {new: true})\n    .then((response) => response.data)\n  }\n}\n\nexport default MainService;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ServicesList = (props) => {\n  return (\n    <div>\n      {props.services.map((service, idx) => {\n        return (\n          <div key={idx}>\n          <Link to={`/condominio/${service.building}/serviço/${service._id}`}>\n            <div className=\"card-box\">\n              <img className=\"card-img\" src={service.image} alt=\"\" />\n              <h3>{service.name}</h3>\n            </div>\n          </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ServicesList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../user/User.css'\n\n\n\nconst OrderList = (props) => {\n  const { orders } = props;\n  let statusAvailable = [\"Pendente\", \"Confirmado\", \"Entregue\", \"Cancelado\"];\n  return (\n    <div>\n      {orders.map((order, idx) => {\n        return (\n          <div key={idx} >\n            <Link\n              to={`/condominio/${order.service.building}/serviço/${order.service._id}`}\n            >\n              <div className=\"card-box\"  >\n                <img className=\"card-img\" src={order.service.image}  alt='' />\n                <h3>{order.service.name}</h3>\n                <h5>Quantidade: {order.quantity}</h5>\n\n                {/* USER QUE CRIOU O SERVIÇO? */}\n                {props.user.services.includes(order.service._id) ? (\n                  <div>\n                    <p>Pedido por: {order.origin.name}</p>\n                    {order.status !== \"Cancelado\" ? (\n                      <form\n                        onChange={(e) =>\n                          props.handleStatus(\n                            order.service.building,\n                            order.service._id,\n                            order._id,\n                            e.target.value\n                          )\n                        }\n                      >\n                        <label>Status: </label>\n                        <select name=\"status\">\n                          <option value={order.status}>{order.status}</option>\n                          {statusAvailable\n                            .filter((elem) => elem !== order.status)\n                            .map((element, idx) => (\n                              <option key={idx} value={element}>\n                                {element}\n                              </option>\n                            ))}\n                        </select>\n                      </form>\n                    ) : (\n                      <p>Status: Cancelado</p>\n                    )}\n                  </div>\n                ) : (\n                  <div>\n                    <p>Status do pedido: {order.status}</p>\n                    {order.status === \"Cancelado\" ? (\n                      <></>\n                    ) : (\n                      <button\n                        onClick={(e) =>\n                          props.handleStatus(\n                            order.service.building,\n                            order.service._id,\n                            order._id,\n                            \"Cancelado\"\n                          )\n                        }\n                      >\n                        Cancelar pedido\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OrderList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainService from \"../MainService\";\nimport ServicesList from \"../service/ServicesList\";\nimport OrderList from \"../order/OrderList\";\nimport \"./User.css\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      orders: [],\n      activeOrders: [],\n      services: [],\n      buildingApiCalled: false,\n      userApiCalled: false,\n      serviceApiCalled: false,\n      orderAPICalled: false,\n      toggleButton: false,\n      confirmationCode: \"\",\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    });\n  }\n\n  getUserUpdated() {\n    if (!this.state.userApiCalled) {\n      this.service.getUser(this.props.user._id).then((response) => {\n        this.props.getUser(response);\n        this.setState({\n          userApiCalled: true,\n        });\n      });\n    }\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin._id.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggle() {\n    this.setState({\n      toggleButton: !this.state.toggleButton,\n    });\n  }\n\n  handleToggleStatus() {\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton,\n    });\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    this.service\n      .buildingInvite(this.state.confirmationCode)\n      .then((response) => {\n        this.setState({\n          toggleButton: !this.state.toggleButton,\n          confirmationCode: \"\",\n          buildingApiCalled: false,\n          userApiCalled: false,\n        });\n      });\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) =>\n        this.setState({\n          orderAPICalled: false,\n        })\n      );\n  }\n\n  activeOrders() {\n    const orders = [...this.state.orders];\n    this.setState({\n      activeOrders: orders.filter((order) => order.status !== \"Cancelado\"),\n    });\n  }\n\n  render() {\n    this.getUserUpdated();\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <div className='main-page-title-box'>\n            <h1> Olá {this.props.user.name} </h1>\n          </div>\n          <div className='welcome-section'>\n            <p>Seja bem vindo(a) ao Nosso Prédio! </p>\n            <p>Você ainda não faz parte de nenhum condomínio da nossa rede.</p>\n          </div>\n          <div>\n              <div className=\"add-building-box\">\n                <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                  Criar Condominio\n                </Link>\n              </div>\n              <div className=\"invitation-code-box\">\n                <button\n                  className=\"invitation-code-btn\"\n                  onClick={() => this.handleToggle()}\n                >\n                  Já tem um convite? Clique aqui para inserir o código\n                </button>\n\n                {this.state.toggleButton ? (\n                  <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                    <input\n                      onChange={this.handleChangeCode}\n                      value={this.state.confirmationCode}\n                      type=\"text\"\n                      name=\"confirmationCode\"\n                      placeholder=\"insira seu código de acesso\"\n                    />\n                    <button type=\"submit\">Enviar</button>\n                  </form>\n                ) : (\n                  <></>\n                )}\n              </div>\n          </div>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      this.getUserServices();\n      this.getUserOrders();\n      return (\n        <div>\n          <div className='main-page-title-box'>\n            <h1> Olá {this.props.user.name} </h1>\n          </div>\n            <div>\n              <div className=\"add-building-box\">\n                <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                  Criar Condominio\n                </Link>\n              </div>\n              <div className=\"invitation-code-box\">\n                <button\n                  className=\"invitation-code-btn\"\n                  onClick={() => this.handleToggle()}\n                >\n                  Já tem um convite? Clique aqui para inserir o código\n                </button>\n\n                {this.state.toggleButton ? (\n                  <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                    <input\n                      onChange={this.handleChangeCode}\n                      value={this.state.confirmationCode}\n                      type=\"text\"\n                      name=\"confirmationCode\"\n                      placeholder=\"insira seu código de acesso\"\n                    />\n                    <button type=\"submit\">Enviar</button>\n                  </form>\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <div className=\"main-page-section-title-container\">\n                <Link\n                  className=\"main-page-section-title\"\n                  to=\"/meus-condominios\"\n                >\n                  Meus condominios\n                </Link>\n              </div>\n              {this.props.user.buildings.length > 3\n                ? this.state.buildings.slice(0, 3).map((building, idx) => {\n                    return (\n                      <div key={idx}>\n                        <Link to={`/condominio/${building._id}`}>\n                          <div className=\"card-box\">\n                            <img\n                              className=\"card-img\"\n                              src={building.image}\n                              alt=\"\"\n                            />\n                            <h3>{building.name}</h3>\n                            <p>CEP: {building.address.cep}</p>\n                          </div>\n                        </Link>\n                      </div>\n                    );\n                  })\n                : this.state.buildings.map((building, idx) => {\n                    return (\n                      <div key={idx}>\n                        <Link to={`/condominio/${building._id}`}>\n                          <div className=\"card-box\">\n                            <img\n                              className=\"card-img\"\n                              src={building.image}\n                              alt=\"\"\n                            />\n                            <h3>{building.name}</h3>\n                            <p>{building.address.cep}</p>\n                          </div>\n                        </Link>\n                      </div>\n                    );\n                  })}\n              {this.props.user.buildings.length > 3 ? (\n                <div className=\"see-more-box\">\n                  <Link className=\"see-more-btn\" to=\"/meus-condominios\">\n                    Ver mais\n                  </Link>\n                </div>\n              ) : (\n                <div></div>\n              )}\n\n              <div className=\"main-page-section-title-container\">\n                <Link className=\"main-page-section-title\" to=\"/meus-serviços\">\n                  Meus serviços e produtos\n                </Link>\n              </div>\n              <div>\n                {this.props.user.services.length > 0 ? (\n                  <ServicesList\n                    services={this.state.services}\n                    {...this.props}\n                  ></ServicesList>\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <div className=\"main-page-section-title-container\">\n                <Link className=\"main-page-section-title\" to=\"/meus-pedidos\">\n                  Meus pedidos\n                </Link>\n              </div>\n              <div>\n                <div className='see-more-btn'>\n                  <button className='see-more-btn' onClick={this.handleToggleStatus}>\n                    {this.state.toggleStatusButton\n                      ? \"Mostrar todos os pedidos\"\n                      : \"Mostrar somente pedidos ativos\"}\n                  </button>\n                </div>\n                {this.state.toggleStatusButton ? (\n                  <OrderList\n                    activeOrders={this.activeOrders}\n                    handleStatus={this.handleStatus}\n                    orders={this.state.orders.filter(\n                      (order) => order.status !== \"Cancelado\"\n                    )}\n                    {...this.props}\n                  />\n                ) : (\n                  <OrderList\n                    handleStatus={this.handleStatus}\n                    orders={this.state.orders}\n                    {...this.props}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n      );\n    }\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\n\nclass AddBuilding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      cep: \"\",\n      number: \"\",\n      // residents: props.user._id,\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {name, cep, number} = this.state\n    this.service\n      .addBuilding(name, cep, number)\n      .then((response) => {\n        this.props.history.push(\"/pagina-principal\");\n      });\n      console.log(this.props)\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Adicione seu Condomínio</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <label>Nome:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n            />\n            <label>CEP:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"cep\"\n              value={this.state.cep}\n            />\n            <label>Número:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"number\"\n              name=\"number\"\n              value={this.state.number}\n            />\n            <button type=\"submit\">Salvar</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddBuilding;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditBuilding extends Component {\n  constructor(props) {\n    super(props);\n    const { name } = this.props.building;\n    const { cep, number } = this.props.building.address;\n\n    this.state = {\n      name: name,\n      cep: cep,\n      number: number,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.building._id;\n    const { name, cep, number } = this.state;\n    this.service\n      .editBuilding(buildingId, name, cep, number)\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedBuilding(response);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    console.log(e.target.files[0])\n\n    uploadData.append(\"image\", e.target.files[0]);\n    const buildingId = this.props.building._id;\n\n    this.service.editBuildingPhoto(uploadData, buildingId)\n    .then((response) => {\n      console.log(response)\n      this.props.getEditedBuilding(response);\n      this.props.handleClick();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <label>Alterar imagem:</label>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>cep:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"cep\"\n            value={this.state.cep}\n          ></input>\n          <label>Número:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditBuilding;\n","import React, { Component } from \"react\";\n\nexport default class InviteLink extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      copySuccess: false,\n    };\n  }\n\n  copyCodeToClipboard = () => {\n    this.setState({\n      copySuccess: true,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <p>Código de acesso: {this.props.code}</p>\n        </div>\n        <div>\n          <button onClick={() => {\n            navigator.clipboard.writeText(`http://nosso-predio.herokuapp.com/convite/${this.props.code}`);\n            this.copyCodeToClipboard();\n          }}>\n            Copiar link\n          </button>\n          {this.state.copySuccess ? (\n            <div style={{ color: \"green\" }}>Copiado!</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport ServicesList from \"../service/ServicesList\";\nimport EditBuilding from \"./EditBuilding\";\nimport InviteLink from \"./InviteLink\";\n\nclass BuildingDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      building: {},\n      services: [],\n      search: \"\",\n      buildingApiCalled: false,\n      serviceApiCalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleClick = this.handleClick.bind(this);\n    this.getEditedBuilding = this.getEditedBuilding.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getBuildingDetails() {\n    if (!this.state.buildingApiCalled) {\n      const { params } = this.props.match;\n      this.service.getBuildingDetails(params.id).then((response) => {\n        this.setState({\n          building: response,\n          buildingApiCalled: true,\n        });\n      });\n    }\n  }\n\n  getEditedBuilding(newBuilding) {\n    console.log();\n    this.setState({\n      building: newBuilding,\n    });\n  }\n\n  getBuildingServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.building.includes(this.state.building._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    this.getBuildingDetails();\n    this.getBuildingServices();\n    return (\n      <div>\n        <div>\n          <img src={this.state.building.image} alt={this.state.building.name} />\n          <h1>{this.state.building.name}</h1>\n          {this.props.user._id === this.state.building.owner ? (\n            <button onClick={this.handleClick}>Editar</button>\n          ) : (\n            <></>\n          )}\n          {this.state.toggleEdit ? (\n            <EditBuilding\n              getEditedBuilding={this.getEditedBuilding}\n              building={this.state.building}\n              handleClick={this.handleClick}\n            />\n          ) : (\n            <></>\n          )}\n        </div>\n        {this.state.building.owner === this.props.user._id ? (\n          <InviteLink code={this.state.building.confirmationCode} />\n        ) : (\n          <></>\n        )}\n        <div>\n          <Link to={`/condominio/${this.state.building._id}/adicionar-serviço`}>\n            Adicionar Serviço/Produto\n          </Link>\n        </div>\n        <h2>Serviços/Produtos disponíveis</h2>\n        <ServicesList services={this.state.services} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default BuildingDetails;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\n\nclass BuildingsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      search: \"\",\n      buildingApiCalled: false,\n      toggleButton: false,\n      confirmationCode: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  handleToggle() {\n    this.setState({\n      toggleButton: !this.state.toggleButton,\n    });\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    });\n  }\n\n  handleOnSubmit(e){\n    e.preventDefault()\n    this.service.buildingInvite(this.state.confirmationCode).then(response => {\n      this.setState({\n        toggleButton: !this.state.toggleButton,\n        confirmationCode: '',\n        buildingApiCalled:false,\n      })\n    })\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <h1> Meus condominios </h1> <br />\n          <div>\n            <div>\n              <Link to=\"/adicionar-condominio\">Adicionar Condominio</Link>{\" \"}\n              <br /> <br />\n            <h1>Você ainda não tem nenhum condominio, entre peça o link para seus vizinhos ou crie!</h1>\n            <br /> <br />\n              <button onClick={() => this.handleToggle()}>\n                Já tem um convite? Junte-se ao seu condomínio\n              </button>{\" \"}\n              <br /> <br />\n              {this.state.toggleButton ? (\n                <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                  <input\n                    onChange={this.handleChangeCode}\n                    value={this.state.confirmationCode}\n                    type=\"text\"\n                    name=\"confirmationCode\"\n                    placeholder=\"insira seu código de acesso\"\n                  />\n                  <button type=\"submit\">Enviar</button>\n                </form>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      return (\n        <div>\n          <h1> Meus condominios </h1>\n          <div>\n            <Link to=\"/adicionar-condominio\">Adicionar Condominio</Link> <br />{\" \"}\n            <br />\n            <button onClick={() => this.handleToggle()}>\n              Já tem um convite? Junte-se ao seu condomínio\n            </button>{\" \"}\n            <br /> <br />\n            {this.state.toggleButton ? (\n              <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                <input\n                  onChange={this.handleChangeCode}\n                  value={this.state.confirmationCode}\n                  type=\"text\"\n                  name=\"confirmationCode\"\n                  placeholder=\"insira seu código de acesso\"\n                />\n                <button type=\"submit\">Enviar</button>\n              </form>\n            ) : (\n              <></>\n            )}\n          </div>\n          <div>\n            <br />\n            <input\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar pelo nome\"\n            />\n          </div>\n\n          <div>\n            {this.state.buildings\n              .filter((elem) => {\n                return elem.name.toLowerCase().includes(this.state.search);\n              })\n              .map((building, idx) => {\n                return (\n                  <div key={idx} className=\"building-box\">\n                    <h1>{building.name}</h1>\n                    <Link to={`/condominio/${building._id}`}>Acessar</Link>\n                  </div>\n                );\n              })}\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default BuildingsPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass AddService extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      category: \"Produto\",\n      price: \"\",\n      date: \"\",\n      apartment: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { params } = this.props.match;\n    const buildingId = params.id;\n    const { name, description, category, price, date, apartment } = this.state;\n\n    this.service\n      .addService(\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n        buildingId\n      )\n      .then((response) => {\n        this.props.history.push(`/condominio/${buildingId}`);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Adicione seu Serviço/Produto</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <label>Nome:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n            />\n            <label>Descrição:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text-area\"\n              name=\"description\"\n              value={this.state.description}\n            />\n            <label>Categoria:</label>\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Produto\">Produto</option>\n              <option value=\"Serviço\">Serviço</option>\n            </select>\n            \n            <label>Preço:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"number\"\n              name=\"price\"\n              value={this.state.price}\n            />\n            <label>Data:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date}\n            />\n            <label>Complemento:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"apartment\"\n              value={this.state.apartment}\n            />\n            <button type=\"submit\">Salvar</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass OrderForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { quantity: 0 };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      quantity: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { quantity } = this.state;\n    const { service, building } = this.props;\n\n    this.service\n      .addOrder(building, service, quantity)\n      .then((response) => {\n        this.setState({\n          quantity: 0,\n        });\n        this.props.history.push(`/meus-pedidos`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div className=\"\">\n          <div className=\"\">\n            <label>Quantidade:</label>\n            <input\n              className=\"\"\n              type=\"number\"\n              name=\"quantity\"\n              value={this.state.quantity}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        <input className=\"button\" type=\"submit\" value=\"Pedir\" />\n      </form>\n    );\n  }\n}\n\nexport default OrderForm;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      description,\n      category,\n      price,\n      date,\n      apartment,\n    } = this.props.service;\n    this.state = {\n      name: name,\n      description: description,\n      category: category,\n      price: price,\n      date: date,\n      apartment: apartment,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.service.building;\n    const serviceId = this.props.service._id;\n\n    const { name, description, price, category, apartment, date } = this.state;\n    this.service\n      .editService(\n        buildingId,\n        serviceId,\n        name,\n        description,\n        price,\n        category,\n        apartment,\n        date\n      )\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedService(response);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    uploadData.append(\"image\", e.target.files[0]);\n    const buildingId = this.props.service.building;\n    const serviceId = this.props.service._id;\n\n    this.service\n      .editServicePhoto(uploadData, buildingId, serviceId)\n      .then((response) => {\n        this.props.getEditedService(response);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <label>Alterar imagem:</label>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>Descrição:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"description\"\n            value={this.state.description}\n          ></input>\n          <label>Preço:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"number\"\n            name=\"price\"\n            value={this.state.price}\n          ></input>\n          <label>Categoria:</label>\n          {this.props.service.category === \"Produto\" ? (\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Produto\">Produto</option>\n              <option value=\"Serviço\">Serviço</option>\n            </select>\n          ) : (\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Serviço\">Serviço</option>\n              <option value=\"Produto\">Produto</option>\n            </select>\n          )}\n          <label>Complemento:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"apartment\"\n            value={this.state.apartment}\n          ></input>\n          <label>Data:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"date\"\n            name=\"date\"\n            value={this.state.date}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport OrderList from \"../order/OrderList\";\nimport OrderForm from \"../order/OrderForm\";\nimport EditService from \"./EditService\";\n\nclass ServiceDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: {},\n      orders: [],\n      serviceAPICalled: false,\n      orderAPICalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleStatus = this.handleStatus.bind(this);\n    this.getEditedService = this.getEditedService.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getServiceDetails() {\n    if (!this.state.serviceAPICalled) {\n      const { params } = this.props.match;\n      this.service\n        .getServiceDetails(params.id, params.servicoId)\n        .then((response) => {\n          this.setState({\n            service: response,\n            serviceAPICalled: true,\n          });\n        });\n    }\n  }\n\n  getServiceOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.service._id.includes(this.state.service._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n  \n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => console.log(response));\n  }\n\n  getEditedService(newService) {\n    this.setState({\n      service: newService,\n    });\n  }\n\n  render() {\n    this.getServiceDetails();\n    this.getServiceOrders();\n    return (\n      <div>\n        <Link\n          to={`/condominio/${this.state.service.building}/adicionar-serviço`}\n        >\n          Adicionar Serviço/Produto\n        </Link>\n        <br />\n        <h1>{this.state.service.name}</h1>\n        <h4>{this.state.service.date}</h4>\n        <p>{this.state.service.category}</p>\n        <p>{this.state.service.description}</p>\n        <img src={this.state.service.image} alt={this.state.service.name} />\n\n      \n        {this.state.service.owner === this.props.user._id ? (\n          <div>\n        <Link to='/pagina-principal'><button>Voltar</button></Link>\n            {!this.state.toggleEdit ? (\n              <>\n            <button onClick={this.handleClick}>Editar</button>\n              </>\n            ) : (\n              <EditService\n                handleClick={this.handleClick}\n                getEditedService={this.getEditedService}\n                service={this.state.service}\n              />\n            )}\n            <h3>Pedidos:</h3>\n            <OrderList\n              handleStatus={this.handleStatus}\n              building={this.state.service.building}\n              orders={this.state.orders}\n              {...this.props}\n            />\n          </div>\n        ) : (\n          <div>\n        <Link to={`/condominio/${this.state.service.building}`}><button>Voltar</button></Link>\n            <h3>Faça seu pedido</h3>\n            <OrderForm {...this.props} service={this.state.service._id} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ServiceDetails;\n","import React, { Component } from \"react\";\nimport AuthService from \"../auth/AuthService\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    const { user } = this.props;\n    this.state = {\n      toggleEdit: false,\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      passwordConfirmation: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n\n    this.service = new AuthService();\n  }\n\n  handleClick() {\n    this.setState({ toggleEdit: !this.state.toggleEdit });\n  }\n\n  handleFormSubmit(e) {\n    console.log(this.props);\n    e.preventDefault();\n    const { email, name } = this.state;\n    const userId = this.props.user._id;\n    this.service.edit(email, name, userId).then((response) => {\n      this.props.getUser(response);\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      });\n    });\n  }\n\n  handlePasswordSubmit(e) {\n    e.preventDefault();\n    const { password, passwordConfirmation } = this.state;\n    const userId = this.props.user._id;\n    if (password === passwordConfirmation) {\n      this.service.editPassword(password, userId).then((response) =>\n        this.setState({\n          toggleEdit: !this.state.toggleEdit,\n        })\n      );\n    } else {\n      return;\n    }\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    uploadData.append(\"image\", e.target.files[0]);\n\n    this.service.editPhoto(uploadData, this.props.user._id).then((response) => {\n      this.props.getUser(response);\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      });\n    });\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div>\n        <div>\n          <h1>Meu Perfil</h1>\n        </div>\n        <div>\n          <button onClick={this.handleClick}>Editar</button>\n          {!this.state.toggleEdit ? (\n            <div>\n              <h3>Nome: {user.name}</h3>\n              <h3>Email: {user.email}</h3>\n              <img src={user.image} alt={user.name} />\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={this.handleFormSubmit}>\n                <label>Nome:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                ></input>\n                <label>Email:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                ></input>\n                <button type=\"submit\">Salvar</button>\n              </form>\n              <label>Alterar foto de perfil:</label>\n              <input\n                onChange={this.handleFileUpload}\n                type=\"file\"\n              />\n              <form onSubmit={this.handlePasswordSubmit}>\n                <label>Senha:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                ></input>\n                <label>Confirme sua senha:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"passwordConfirmation\"\n                  value={this.state.passwordConfirmation}\n                ></input>\n                <button type=\"submit\">Salvar</button>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport ServicesList from \"../service/ServicesList\";\nimport { Link } from \"react-router-dom\";\n\n\nclass ServicesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      services: [],\n      search: \"\",\n      serviceApiCalled: false,\n    };\n    this.service = new MainService();\n\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // IF USER DOESNT HAVE BUILDINGS\n    this.getUserServices();\n    if (this.props.user.services.length < 1) {\n      return (\n        <div>\n          <h1> Meus serviços/produtos </h1> <br />\n          <div>\n            <h1>Você ainda não tem nenhum serviço, entre em um dos seus condominios e crie um!</h1>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      return (\n        <div>\n          <h1> Meus serviços/produtos </h1>\n          <div>\n            <br />\n            <input\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar pelo nome\"\n            />\n          </div>\n\n          <div>\n          <ServicesList\n                services={this.state.services\n                    .filter((elem) => {\n                      return elem.name.toLowerCase().includes(this.state.search);\n                    })}\n                {...this.props}\n              ></ServicesList>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ServicesPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport OrderList from \"./OrderList\";\nimport { Link } from \"react-router-dom\";\n\n\nclass OrdersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        orders: [],\n        activeOrders:[],\n      search: \"\",\n      orderAPICalled: false,\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin._id.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggleStatus(){\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton\n    })\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => this.setState({\n        orderAPICalled: false\n      })\n      );\n  }\n\n  activeOrders(){\n    const orders = [...this.state.orders]\n    this.setState({\n      activeOrders: orders.filter(order => order.status !== \"Cancelado\")\n    })\n  }\n\n  render() {\n    // IF USER DOESNT HAVE ORDERS\n    this.getUserOrders();\n    if (this.state.orders.length < 1) {\n      return (\n        <div>\n          <h1> Meus pedidos </h1> <br />\n          <div>\n            <h1>Você ainda não tem nenhum pedido, acesse um de seus condominios e peça!</h1>\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n\n      // IF USER HAS ORDERS\n    } else {\n      return (\n        <div>\n          <h1> Meus pedidos </h1>\n          <div>\n          <button onClick={this.handleToggleStatus}>\n              {this.state.toggleStatusButton ? ('Mostrar todos os pedidos') : ('Mostrar somente pedidos ativos')}\n              </button>\n              {this.state.toggleStatusButton ? (\n                <OrderList activeOrders={this.activeOrders} handleStatus={this.handleStatus} orders={this.state.orders.filter(order => order.status !== \"Cancelado\")} {...this.props} />\n              ):(\n                <OrderList handleStatus={this.handleStatus} orders={this.state.orders} {...this.props}/>\n              )}\n          </div>\n          <Link to='/pagina-principal'><button>Voltar</button></Link>\n        </div>\n      );\n    }\n  }\n}\n\nexport default OrdersPage;\n","import React, { Component } from 'react';\nimport MainService from '../MainService'\n\nclass InvitePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n        this.service = new MainService();\n        this.inviteCode = this.inviteCode.bind(this)\n    }\n\n    inviteCode(){\n        const {invitationCode} = this.props.match.params\n        this.service.buildingInvite(invitationCode).then(response => {\n        //   this.props.getUser(response)\n          this.props.history.push(`/pagina-principal`);\n        })\n      }\n\n    render() { \n        this.inviteCode()\n        console.log(this.props)\n        return ( <div>\n            <h1>Encontrando seu predio</h1>\n        </div> );\n    }\n}\n \nexport default InvitePage;","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst RedirectToMain = _ => {\n    return (\n        <Redirect to=\"/\" />\n    );\n}\n\nexport default RedirectToMain","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Home from \"./components/Home\";\nimport ProtectedRoutes from \"./components/auth/ProtectedRoutes\";\nimport MainPage from \"./components/user/MainPage\";\nimport AddBuilding from \"./components/building/AddBuilding\";\nimport BuildingDetails from \"./components/building/BuildingDetails\";\nimport BuildingsPage from \"./components/building/BuildingsPage\";\nimport AddService from \"./components/service/AddService\";\nimport ServiceDetails from \"./components/service/ServiceDetails\";\nimport ProfilePage from \"./components/user/ProfilePage\";\nimport ServicesPage from \"./components/service/ServicesPage\";\nimport OrdersPage from \"./components/order/OrdersPage\";\nimport InvitePage from \"./components/building/InvitePage\";\nimport RedirectToMain from \"./components/RedirectToMain\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedUser: null,\n    };\n    this.service = new AuthService();\n\n    this.getUser = this.getUser.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedUser === null) {\n      this.service\n        .loggedin()\n        .then((response) => {\n          this.setState({\n            loggedUser: response,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            loggedUser: false,\n          });\n        });\n    }\n  }\n\n  getUser(user) {\n    this.setState({\n      loggedUser: user,\n    });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then((response) => {\n        this.setState({\n          loggedUser: null,\n        });\n        this.props.history.push(`/`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    this.fetchUser();\n    return (\n      <div className=\"app-outer-container\">\n        {this.state.loggedUser ? (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n            <div className=\"app-container\">\n              <Switch>\n                <Route exact path=\"/\" render={(props) => <Home user={this.state.loggedUser} {...props} />}/>\n                <ProtectedRoutes\n                  exact\n                  path=\"/pagina-principal\"\n                  component={MainPage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/adicionar-condominio\"\n                  component={AddBuilding}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id\"\n                  component={BuildingDetails}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id/adicionar-serviço\"\n                  component={AddService}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id/serviço/:servicoId\"\n                  component={ServiceDetails}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-condominios\"\n                  component={BuildingsPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-serviços\"\n                  component={ServicesPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-pedidos\"\n                  component={OrdersPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/convite/:invitationCode\"\n                  component={InvitePage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/perfil\"\n                  component={ProfilePage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                {/* this route will catch any route that wasnt matched in previous routes */}\n                <Route component={RedirectToMain} />\n              </Switch>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n            <div className=\"app-container\">\n              <Switch>\n                <Route exact path=\"/\"  render={(props) => <Home user={this.state.loggedUser} {...props} />} />\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={(props) => (\n                    <Signup getUser={this.getUser} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={(props) => (\n                    <Login getUser={this.getUser} {...props} />\n                  )}\n                />\n                <Route component={RedirectToMain} />\n              </Switch>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}