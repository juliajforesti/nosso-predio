{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/Home.js","components/auth/ProtectedRoutes.js","components/MainService.js","components/service/ServicesList.js","components/order/OrderList.js","components/user/MainPage.js","components/building/AddBuilding.js","components/building/EditBuilding.js","components/building/BuildingDetails.js","components/service/AddService.js","components/order/OrderForm.js","components/service/EditService.js","components/service/ServiceDetails.js","components/user/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","user","onClick","logout","AuthService","this","service","axios","create","baseURL","process","withCredentials","email","password","name","post","then","response","data","get","userId","new","Signup","state","handleChange","bind","handleFormSubmit","e","target","value","setState","preventDefault","signup","getUser","history","push","catch","err","console","log","onSubmit","type","onChange","Component","Login","login","Home","ProtectedRoutes","component","rest","render","pathname","from","location","MainService","buildings","cep","number","buildingId","description","category","price","date","apartment","serviceId","quantity","code","orderId","status","ServicesList","services","map","idx","key","building","_id","OrderList","orders","statusAvailable","order","includes","handleStatus","filter","elem","element","MainPage","activeOrders","search","buildingApiCalled","serviceApiCalled","orderAPICalled","toggleButton","confirmationCode","toggleStatusButton","handleChangeCode","handleChangeSearch","handleOnSubmit","handleToggleStatus","toLowerCase","getBuildings","getAllBuildings","residents","getAllServices","owner","getAllOrders","origin","buildingInvite","changeStatus","length","handleToggle","placeholder","getUserBuildings","getUserServices","getUserOrders","AddBuilding","handleSubmit","addBuilding","EditBuilding","address","editBuilding","handleClick","getEditedBuilding","BuildingDetails","toggleEdit","params","match","getBuildingDetails","id","newBuilding","getBuildingServices","AddService","addService","OrderForm","addOrder","EditService","editService","getEditedService","ServiceDetails","serviceAPICalled","getServiceDetails","servicoId","newService","getServiceOrders","src","image","alt","ProfilePage","handlePasswordSubmit","edit","editPassword","App","loggedUser","loggedin","fetchUser","exact","path","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0f971dfa.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"nav-main-box\">\n      <div className=\"nav-left-side\">\n        <NavLink className='nav-link' to=\"/\">Nosso Predio</NavLink>\n      </div>\n      <div >\n        {!props.user ? (\n          <div className=\"nav-right-side\">\n              <NavLink className='nav-link' to=\"/signup\">Signup</NavLink>\n              <NavLink className='nav-link' to=\"/login\">Login</NavLink>\n          </div>\n        ) : (\n          <div className='nav-link'>\n            <NavLink className='nav-link' to='/perfil'>Perfil</NavLink>\n            <button className='nav-link' onClick={() => props.logout()}>Logout</button>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  signup(email, password, name) {\n    return this.service\n      .post(\"/signup\", { email, password, name })\n      .then((response) => (\n        response.data\n        ));\n  }\n\n  login(email, password) {\n    return this.service\n      .post(\"/login\", { email, password })\n      .then((response) => response.data);\n  }\n\n  logout() {\n    return this.service\n    .get(\"/logout\", {})\n    .then((response) => response.data);\n  }\n\n  loggedin() {\n    return this.service\n    .get('/loggedin', {})\n    .then((response) => response.data)\n  }\n\n  edit(email, name, userId){\n    return this.service\n    .post(`/edit-user/${userId}`, {email, name}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPassword( password, userId){\n    return this.service\n    .post(`/edit-password/${userId}`, {password}, {new: true})\n    .then((response) => response.data)\n  }\n\n}\n\nexport default AuthService;\n","// auth/Signup.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n\n  }\n\n  handleChange(e){\n    const {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFormSubmit(e){\n    e.preventDefault()\n    const {email, password, name} = this.state;\n    this.service\n    .signup(email, password, name)\n    .then(response => {\n      this.setState({\n        email: '',\n        password: '',\n        name: ''\n      })\n      this.props.getUser(response)\n      this.props.history.push('/pagina-principal')\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() { \n    return (  \n      <div className=\"\">\n      <h1>Cadastrar</h1>\n        <form onSubmit={this.handleFormSubmit}>\n        <div className=\"\">\n            <div className=\"\">\n              <label>Nome:</label>\n              <input\n                className=\"\"\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <div className=\"\">\n              <label>Email:</label>\n              <input\n                className=\"\"\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <div className=\"\">\n              <label>Senha:</label>\n              <input\n                className=\"\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n          <input className=\"button\" type=\"submit\" value=\"Signup\" />\n        </form>\n        <p>\n          Já tem uma conta?\n          <Link to={\"/login\"}> Entre</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;","// auth/Login.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    }\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n  }\n\n  handleChange(e){\n    const {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleFormSubmit(e){\n    e.preventDefault()\n    const {email, password} = this.state;\n    this.service\n    .login(email, password)\n    .then(response => {\n      this.setState({\n        email: '',\n        password: '',\n      })\n      this.props.getUser(response)\n      this.props.history.push('/pagina-principal')\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() { \n    return (  \n      <div className=\"\">\n      <h1>Entrar</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"\">\n            <div className=\"\">\n              <label>Email:</label>\n              <input\n                className=\"\"\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <div className=\"\">\n              <label>Senha:</label>\n              <input\n                className=\"\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n          <input className=\"button\" type=\"submit\" value=\"Entrar\" />\n        </form>\n        <p>\n          Não tem uma conta?\n          <Link to={\"/signup\"}> Cadastre-se</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nconst Home = () => {\n  return (  \n    <div>\n    <div>\n      <h1>Nosso Prédio</h1>\n    </div>\n    <div>\n      <Link to='/signup'>Cadastre-se agora</Link> <br/>\n      <Link to='/pagina-principal'>Pagina principal</Link>\n\n    </div>\n    <div>\n      <h2>Sobre</h2>\n      <p>blablabla</p>\n    </div>\n\n      \n    </div>\n  );\n}\n \nexport default Home;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst ProtectedRoutes = ({component: Component, user, getUser, ...rest}) => {\n\n  console.log(user)\n  return (\n    <Route {...rest} render={(props) => {\n      if (user) {\n        return <Component {...props} user={user} getUser={getUser}/>\n      } else {\n        return <Redirect to={{pathname:'/login', state:{from:props.location}}} />\n      }\n    }} />\n  )\n}\n\nexport default ProtectedRoutes;","import axios from \"axios\";\n\nclass MainService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  getUser(userId) {\n    return this.service\n      .get(`/user/${userId}`)\n      .then((response) => response.data);\n  }\n\n  getAllBuildings() {\n    return this.service\n      .get(\"/buildings\", {})\n      .then((buildings) => buildings.data);\n  }\n\n  addBuilding(name, cep, number) {\n    return this.service\n      .post(\"/add-building\", { name, cep, number }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getBuildingDetails(buildingId) {\n    return this.service\n      .get(`/building/${buildingId}`)\n      .then((response) => response.data);\n  }\n\n  addService(name, description, category, price, date, apartment, buildingId) {\n    return this.service\n      .post(`/building/${buildingId}/add-service`, {\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getAllServices() {\n    return this.service.get(\"/services\").then((response) => response.data);\n  }\n\n  getServiceDetails(buildingId, serviceId) {\n    return this.service\n      .get(`/building/${buildingId}/service/${serviceId}`)\n      .then((response) => response.data);\n  }\n\n  getAllOrders() {\n    return this.service.get(\"/orders\").then((response) => response.data);\n  }\n\n  addOrder(buildingId, serviceId, quantity) {\n    return this.service\n      .post(`/building/${buildingId}/service/${serviceId}/add-order`, {\n        quantity,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  buildingInvite(code) {\n    return this.service\n      .get(`building-invitation/${code}`, {new: true})\n      .then((response) => response.data);\n  }\n\n  changeStatus(buildingId, serviceId, orderId, status) {\n    return this.service\n      .post(\n        `/building/${buildingId}/service/${serviceId}/status-order/${orderId}`, {status}, {new: true}\n      )\n      .then((response) => response.data);\n  }\n\n  editBuilding(buildingId, name, cep, number){\n    return this.service.post(`/edit-building/${buildingId}`, {name, cep, number})\n    .then(response => response.data)\n  }\n  editService(buildingId, serviceId, name, description, price, category, apartment, date){\n    return this.service.post(`/building/${buildingId}/edit-service/${serviceId}`, {name, description, price, category, apartment, date})\n    .then(response => response.data)\n  }\n}\n\nexport default MainService;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ServicesList = (props) => {\n    return (\n        <div>\n          {props.services.map((service, idx)=> {\n            return (\n              <div key={idx} className=\"building-box\">\n                <h2 >{service.name}</h2>\n                <Link to={`/condominio/${service.building}/serviço/${service._id}`}>Acessar</Link>\n              </div>\n            )\n          })}\n        </div>\n    )\n}\n\nexport default ServicesList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst OrderList = (props) => {\n  const { orders } = props;\n  let statusAvailable = [\"Pendente\", \"Confirmado\", \"Entregue\", \"Calcelado\"];\n  return (\n    <div>\n      {orders.map((order, idx) => {\n        return (\n          <div key={idx} className=\"building-box\">\n            <Link\n              to={`/condominio/${order.service.building}/serviço/${order.service._id}`}\n            >\n            <h3>{order.service.name}</h3>\n            </Link>\n            <h3>Quantidade: {order.quantity}</h3>\n\n            {/* USER QUE CRIOU O SERVIÇO? */}\n            {props.user.services.includes(order.service._id) ? (\n              <form\n                onChange={(e) =>\n                  props.handleStatus(\n                    order.service.building,\n                    order.service._id,\n                    order._id,\n                    e.target.value\n                  )\n                }\n              >\n                <label>Status: </label>\n                <select name=\"status\">\n                  <option value={order.status}>{order.status}</option>\n                  {statusAvailable\n                    .filter((elem) => elem !== order.status)\n                    .map((element, idx) => (\n                      <option key={idx} value={element}>\n                        {element}\n                      </option>\n                    ))}\n                </select>\n              </form>\n            ) : (\n              <div>\n                <p>Status do pedido: {order.status}</p>\n                {order.status === \"Cancelado\" ? (\n                  <></>\n                ) : (\n                  <button\n                    onClick={(e) =>\n                      props.handleStatus(\n                        order.service.building,\n                        order.service._id,\n                        order._id,\n                        \"Cancelado\"\n                      )}\n                  >\n                    Cancelar pedido\n                  </button>\n                )\n                }\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OrderList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainService from \"../MainService\";\nimport \"./User.css\";\n// import BuildingsList from \"../building/BuildingsList\";\nimport ServicesList from \"../service/ServicesList\";\nimport OrderList from \"../order/OrderList\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      orders: [],\n      activeOrders:[],\n      services: [],\n      search: \"\",\n      buildingApiCalled: false,\n      serviceApiCalled: false,\n      orderAPICalled: false,\n      toggleButton: false,\n      confirmationCode: '',\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n\n\n    \n\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    }, () => this.getBuildings());\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggle(){\n    this.setState({\n      toggleButton: !this.state.toggleButton\n    })\n  }\n\n  handleToggleStatus(){\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton\n    })\n  }\n\n  handleOnSubmit(e){\n    e.preventDefault()\n    this.service.buildingInvite(this.state.confirmationCode).then(response => {\n      this.setState({\n        toggleButton: !this.state.toggleButton,\n        confirmationCode: '',\n        buildingApiCalled:false,\n      })\n    })\n  }\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => this.setState({\n        orderAPICalled: false\n      })\n      );\n  }\n\n  activeOrders(){\n    const orders = [...this.state.orders]\n    this.setState({\n      activeOrders: orders.filter(order => order.status !== \"Cancelado\")\n    })\n  }\n\n  render() {\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <h1> Main Page </h1> <br/>\n          <div>\n            <div>\n              <Link to=\"/adicionar-condominio\">Adicionar Condominio</Link> <br/> <br/>\n              <button onClick={()=>this.handleToggle()}>Já tem um convite? Junte-se ao seu condomínio</button> <br/> <br/>\n              {this.state.toggleButton ? (\n                <form onSubmit={this.handleOnSubmit} type= 'submit'>\n                  <input onChange={this.handleChangeCode} value={this.state.confirmationCode} type='text' name='confirmationCode' placeholder='insira seu código de acesso'/>\n                  <button type='submit' >Enviar</button>\n                </form>\n              ) : (\n                <></>\n              )\n              }\n\n              <input\n                type=\"text\"\n                value={this.state.search}\n                onChange={this.handleChangeSearch}\n                placeholder='Buscar pelo nome'\n              />\n              {this.state.buildings\n                .filter((elem) => {\n                  return elem.name.toLowerCase().includes(this.state.search);\n                })\n                .map((building, idx) => {\n                  return (\n                    <div key={idx} className=\"building-box\">\n                      <h1>{building.name}</h1>\n                    </div>\n                  );\n                })}\n              {/* <BuildingsList buildings={this.state.filteredBuildings} {...this.props}></BuildingsList> */}\n            </div>\n          </div>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      this.getUserServices();\n      this.getUserOrders();\n      return (\n        <div>\n          <h1> Main Page </h1>\n          <div>\n            <Link to=\"/adicionar-condominio\">Adicionar Condominio</Link>  <br/> <br/>\n            <button onClick={()=>this.handleToggle()}>Já tem um convite? Junte-se ao seu condomínio</button> <br/> <br/>\n              {this.state.toggleButton ? (\n                <form onSubmit={this.handleOnSubmit} type= 'submit'>\n                  <input onChange={this.handleChangeCode} value={this.state.confirmationCode} type='text' name='confirmationCode' placeholder='insira seu código de acesso'/>\n                  <button type='submit' >Enviar</button>\n                </form>\n              ) : (\n                <></>\n              )\n              }\n          </div>\n          <div>\n            <br />\n            <input\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar pelo nome\"\n            />\n          </div>\n\n          <div>\n            <h3>Meus Condominios</h3>\n            {this.state.buildings\n              .filter((elem) => {\n                return elem.name.toLowerCase().includes(this.state.search);\n              })\n              .map((building, idx) => {\n                return (\n                  <div key={idx} className=\"building-box\">\n                    <h1>{building.name}</h1>\n                    <Link to={`/condominio/${building._id}`}>Acessar</Link>\n                  </div>\n                );\n              })}\n          </div>\n\n          <div>\n            <h3>Meus Serviços</h3>\n            {this.props.user.services.length > 0 ? (\n              <ServicesList\n                services={this.state.services}\n                {...this.props}\n              ></ServicesList>\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <div>\n            <h3>Meus Pedidos</h3>\n              <button onClick={this.handleToggleStatus}>\n              {this.state.toggleStatusButton ? ('Mostrar todos os pedidos') : ('Mostrar somente pedidos ativos')}\n              </button>\n              {this.state.toggleStatusButton ? (\n                <OrderList activeOrders={this.activeOrders} handleStatus={this.handleStatus} orders={this.state.orders.filter(order => order.status !== \"Cancelado\")} {...this.props} />\n              ):(\n                <OrderList handleStatus={this.handleStatus} orders={this.state.orders} {...this.props}/>\n              )}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\n\nclass AddBuilding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      cep: \"\",\n      number: \"\",\n      // residents: props.user._id,\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {name, cep, number} = this.state\n    this.service\n      .addBuilding(name, cep, number)\n      .then((response) => {\n        this.props.history.push(\"/pagina-principal\");\n      });\n      console.log(this.props)\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Adicione seu Condomínio</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <label>Nome:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n            />\n            <label>CEP:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"cep\"\n              value={this.state.cep}\n            />\n            <label>Número:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"number\"\n              name=\"number\"\n              value={this.state.number}\n            />\n            <button type=\"submit\">Salvar</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddBuilding;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditBuilding extends Component {\n  constructor(props) {\n    super(props);\n    const {name} = this.props.building;\n    const {cep, number} = this.props.building.address;\n\n    this.state = {\n      name: name,\n      cep: cep,\n      number: number,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.building._id;\n    const { name, cep, number } = this.state;\n    this.service\n      .editBuilding(buildingId, name, cep, number)\n      .then((response) => {\n        console.log(response)\n        this.props.handleClick()\n        this.props.getEditedBuilding(response)\n      });\n  }\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>cep:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"cep\"\n            value={this.state.cep}\n          ></input>\n          <label>Número:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditBuilding;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport ServicesList from \"../service/ServicesList\";\nimport EditBuilding from './EditBuilding'\n\nclass BuildingDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      building: {},\n      services: [],\n      search: \"\",\n      buildingApiCalled: false,\n      serviceApiCalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleClick = this.handleClick.bind(this);\n    this.getEditedBuilding = this.getEditedBuilding.bind(this);\n\n\n  }\n  handleClick() {\n    this.setState({ \n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getBuildingDetails() {\n    if (!this.state.buildingApiCalled) {\n      const { params } = this.props.match;\n      this.service.getBuildingDetails(params.id).then((response) => {\n        console.log(response)\n        this.setState({\n          building: response,\n          buildingApiCalled: true,\n        });\n      });\n    }\n  }\n  getEditedBuilding(newBuilding) {\n    this.setState({\n      building: newBuilding,\n    });\n  }\n\n  getBuildingServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.building.includes(this.state.building._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n\n  render() {\n    this.getBuildingDetails();\n    this.getBuildingServices();\n    return (\n      <div>\n        <div>\n          <h1>{this.state.building.name}</h1>\n          {this.props.user._id === this.state.building.owner ? (\n            <button onClick={this.handleClick}>Editar</button>\n          ) : (<></>)}\n          {this.state.toggleEdit ? (\n            <EditBuilding getEditedBuilding={this.getEditedBuilding} building={this.state.building} handleClick={this.handleClick} />\n          ) : (<></>)}\n        </div>\n        {this.state.building.owner === this.props.user._id ? (\n          <p>\n            Link para convidar outros:{\" \"}\n            {`http://localhost:3000/${this.state.building.confirmationCode}`}\n          </p>\n        ) : (\n          <></>\n        )}\n        <div>\n          <Link to={`/condominio/${this.state.building._id}/adicionar-serviço`}>\n            Adicionar Serviço/Produto\n          </Link>\n        </div>\n        <h2>Serviços/Produtos disponíveis</h2>\n        <ServicesList services={this.state.services} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default BuildingDetails;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass AddService extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      category: \"\",\n      price: \"\",\n      date: \"\",\n      apartment: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { params } = this.props.match;\n    const buildingId = params.id;\n    const { name, description, category, price, date, apartment } = this.state;\n\n    this.service\n      .addService(\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n        buildingId\n      )\n      .then((response) => {\n        this.props.history.push(`/condominio/${buildingId}`);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Adicione seu Serviço/Produto</h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <label>Nome:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n            />\n            <label>Descrição:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text-area\"\n              name=\"description\"\n              value={this.state.description}\n            />\n            <label>Categoria:</label>\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Produto\">Produto</option>\n              <option value=\"Serviço\">Serviço</option>\n            </select>\n            \n            <label>Preço:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"number\"\n              name=\"price\"\n              value={this.state.price}\n            />\n            <label>Data:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date}\n            />\n            <label>Complemento:</label>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"apartment\"\n              value={this.state.apartment}\n            />\n            <button type=\"submit\">Salvar</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass OrderForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { quantity: 0 };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      quantity: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { quantity } = this.state;\n    const { service, building } = this.props;\n\n    this.service\n      .addOrder(building, service, quantity)\n      .then((response) => {\n        this.setState({\n          quantity: 0,\n        });\n        this.props.history.push(`/pagina-principal`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div className=\"\">\n          <div className=\"\">\n            <label>Quantidade:</label>\n            <input\n              className=\"\"\n              type=\"number\"\n              name=\"quantity\"\n              value={this.state.quantity}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        <input className=\"button\" type=\"submit\" value=\"Pedir\" />\n      </form>\n    );\n  }\n}\n\nexport default OrderForm;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      description,\n      category,\n      price,\n      date,\n      apartment,\n    } = this.props.service;\n    this.state = {\n      name: name,\n      description: description,\n      category: category,\n      price: price,\n      date: date,\n      apartment: apartment,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.service.building._id;\n    const serviceId = this.props.service._id;\n\n    const { name, description, price, category, apartment, date } = this.state;\n    this.service\n      .editService(\n        buildingId,\n        serviceId,\n        name,\n        description,\n        price,\n        category,\n        apartment,\n        date\n      )\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedService(response);\n      });\n  }\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>Descrição:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"description\"\n            value={this.state.description}\n          ></input>\n          <label>Preço:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"number\"\n            name=\"price\"\n            value={this.state.price}\n          ></input>\n          <label>Categoria:</label>\n          {this.props.service.category === 'Produto' ? (\n          <select\n            onChange={this.handleChange}\n            name=\"category\"\n          >\n            <option value='Produto'>Produto</option>\n            <option value='Serviço'>Serviço</option>\n          </select>\n\n          ) : (\n          <select\n            onChange={this.handleChange}\n            name=\"category\"\n          >\n            <option value='Serviço'>Serviço</option>\n            <option value='Produto'>Produto</option>\n          </select>\n          )}\n          <label>Complemento:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"apartment\"\n            value={this.state.apartment}\n          ></input>\n          <label>Data:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"date\"\n            name=\"date\"\n            value={this.state.date}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport OrderList from \"../order/OrderList\";\nimport OrderForm from \"../order/OrderForm\";\nimport EditService from \"./EditService\";\n\nclass ServiceDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: {},\n      orders: [],\n      serviceAPICalled: false,\n      orderAPICalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleStatus = this.handleStatus.bind(this);\n    this.getEditedService = this.getEditedService.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getServiceDetails() {\n    if (!this.state.serviceAPICalled) {\n      const { params } = this.props.match;\n      this.service\n        .getServiceDetails(params.id, params.servicoId)\n        .then((response) => {\n          this.setState({\n            service: response,\n            serviceAPICalled: true,\n          });\n        });\n    }\n  }\n\n  getServiceOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.service._id.includes(this.state.service._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => console.log(response));\n  }\n\n  getEditedService(newService) {\n    this.setState({\n      service: newService,\n    });\n  }\n\n  render() {\n    this.getServiceDetails();\n    this.getServiceOrders();\n    return (\n      <div>\n        <Link\n          to={`/condominio/${this.state.service.building}/adicionar-serviço`}\n        >\n          Adicionar Serviço/Produto\n        </Link>\n        <br />\n        <h1>{this.state.service.name}</h1>\n        <h4>{this.state.service.date}</h4>\n        <p>{this.state.service.category}</p>\n        <p>{this.state.service.description}</p>\n        <img src={this.state.service.image} alt={this.state.service.name} />\n\n        {this.state.service.owner === this.props.user._id ? (\n          <div>\n            {!this.state.toggleEdit ? (\n              <>\n            <button onClick={this.handleClick}>Editar</button>\n              </>\n            ) : (\n              <EditService\n                handleClick={this.handleClick}\n                getEditedService={this.getEditedService}\n                service={this.state.service}\n              />\n            )}\n            <h3>Pedidos:</h3>\n            <OrderList\n              handleStatus={this.handleStatus}\n              building={this.state.service.building}\n              orders={this.state.orders}\n              {...this.props}\n            />\n          </div>\n        ) : (\n          <div>\n            <h3>Faça seu pedido</h3>\n            <OrderForm {...this.props} service={this.state.service._id} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ServiceDetails;\n","import React, { Component } from \"react\";\nimport AuthService from \"../auth/AuthService\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    const { user } = this.props;\n    this.state = {\n      toggleEdit: false,\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n\n    this.service = new AuthService();\n  }\n\n  handleClick() {\n    this.setState({ toggleEdit: !this.state.toggleEdit });\n  }\n  handleFormSubmit(e) {\n    console.log(this.props)\n    e.preventDefault();\n    const { email, name } = this.state;\n    const userId = this.props.user._id;\n    this.service.edit(email, name, userId)\n      .then((response) => {\n        this.props.getUser(response)\n        this.setState({\n          toggleEdit: !this.state.toggleEdit,\n        })\n    }\n    );\n  }\n\n  handlePasswordSubmit(e) {\n    e.preventDefault();\n    const { password } = this.state;\n    const userId = this.props.user._id;\n    this.service.editPassword(password, userId).then((response) =>\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      })\n    );\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div>\n        <div>\n          <h1>Meu Perfil</h1>\n        </div>\n        <div>\n          <button onClick={this.handleClick}>Editar</button>\n          {!this.state.toggleEdit ? (\n            <div>\n              <h3>Nome: {user.name}</h3>\n              <h3>Email: {user.email}</h3>\n              <img src={user.image} alt={user.name} />\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={this.handleFormSubmit}>\n                <label>Nome:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                ></input>\n                <label>Email:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                ></input>\n                <button type=\"submit\">Salvar</button>\n              </form>\n\n              <form onSubmit={this.handlePasswordSubmit}>\n                <label>Senha:</label>\n                <input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                ></input>\n                <button type=\"submit\">Salvar</button>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Home from \"./components/Home\";\nimport ProtectedRoutes from \"./components/auth/ProtectedRoutes\";\nimport MainPage from \"./components/user/MainPage\";\nimport AddBuilding from \"./components/building/AddBuilding\";\nimport BuildingDetails from \"./components/building/BuildingDetails\";\nimport AddService from \"./components/service/AddService\";\nimport ServiceDetails from \"./components/service/ServiceDetails\";\nimport ProfilePage from \"./components/user/ProfilePage\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedUser: null,\n    };\n    this.service = new AuthService();\n\n    this.getUser = this.getUser.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedUser === null) {\n      this.service\n        .loggedin()\n        .then((response) => {\n          this.setState({\n            loggedUser: response,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            loggedUser: false,\n          });\n        });\n    }\n  }\n\n  getUser(user) {\n    this.setState({\n      loggedUser: user,\n    });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then((response) => {\n        this.setState({\n          loggedUser: null,\n        });\n        this.props.history.push(`/`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    this.fetchUser();\n    return (\n      <div>\n        {this.state.loggedUser ? (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <ProtectedRoutes\n                exact\n                path=\"/pagina-principal\"\n                component={MainPage}\n                user={this.state.loggedUser}\n                getUser={this.getUser}\n              />\n              <ProtectedRoutes\n                exact\n                path=\"/adicionar-condominio\"\n                component={AddBuilding}\n                user={this.state.loggedUser}\n              />\n              <ProtectedRoutes\n                exact\n                path=\"/condominio/:id\"\n                component={BuildingDetails}\n                user={this.state.loggedUser}\n              />\n              <ProtectedRoutes\n                exact\n                path=\"/condominio/:id/adicionar-serviço\"\n                component={AddService}\n                user={this.state.loggedUser}\n              />\n              <ProtectedRoutes\n                exact\n                path=\"/condominio/:id/serviço/:servicoId\"\n                component={ServiceDetails}\n                user={this.state.loggedUser}\n              />\n              <ProtectedRoutes\n                exact\n                path=\"/perfil\"\n                component={ProfilePage}\n                user={this.state.loggedUser}\n                getUser={this.getUser}\n              />\n            </Switch>\n          </div>\n        ) : (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n            <Switch>\n              <Route\n                exact\n                path=\"/signup\"\n                render={(props) => <Signup getUser={this.getUser} {...props} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={(props) => <Login getUser={this.getUser} {...props} />}\n              />\n              <Route component={Home} />\n            </Switch>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}