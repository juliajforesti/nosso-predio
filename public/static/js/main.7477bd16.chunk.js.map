{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/Home.js","components/auth/ProtectedRoutes.js","components/MainService.js","components/service/ServicesList.js","components/order/OrderList.js","components/user/MainPage.js","components/building/AddBuilding.js","components/building/EditBuilding.js","components/building/InviteLink.js","components/building/BuildingDetails.js","components/building/BuildingsPage.js","components/service/AddService.js","components/order/OrderForm.js","components/service/EditService.js","components/service/ServiceDetails.js","components/user/ProfilePage.js","components/service/ServicesPage.js","components/order/OrdersPage.js","components/building/InvitePage.js","components/RedirectToMain.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","src","alt","user","onClick","logout","AuthService","this","service","axios","create","baseURL","process","withCredentials","email","password","name","post","then","response","data","get","userId","new","image","Signup","state","errorMessage","passwordCheck","passwordCounter","handleChange","bind","handleFormSubmit","responseGoogle","e","target","value","setState","checkPasswordLength","console","log","length","preventDefault","signup","getUser","history","push","catch","err","googleLogin","resp","onSubmit","type","onChange","style","border","disabled","href","Component","Login","login","Home","ProtectedRoutes","component","rest","render","pathname","from","location","MainService","buildings","cep","number","buildingId","description","category","price","date","apartment","serviceId","quantity","code","orderId","status","delete","ServicesList","servicePage","services","map","idx","key","building","_id","toUpperCase","OrderList","orders","statusAvailable","order","origin","split","some","item","handleStatus","filter","elem","element","MainPage","activeOrders","buildingApiCalled","userApiCalled","serviceApiCalled","orderAPICalled","toggleButton","confirmationCode","toggleStatusButton","handleChangeCode","handleOnSubmit","handleToggleStatus","getAllBuildings","residents","includes","getAllServices","owner","getAllOrders","buildingInvite","changeStatus","getUserUpdated","getBuildings","handleToggle","placeholder","getUserBuildings","getUserServices","getUserOrders","slice","address","AddBuilding","handleSubmit","addBuilding","message","duplicate","width","goBack","EditBuilding","handleFileUpload","editBuilding","handleClick","getEditedBuilding","uploadData","FormData","files","append","editBuildingPhoto","InviteLink","copyCodeToClipboard","copySuccess","navigator","clipboard","writeText","color","BuildingDetails","search","toggleEdit","handleChangeSearch","toLowerCase","params","match","getBuildingDetails","id","newBuilding","getBuildingServices","BuildingsPage","AddService","addService","OrderForm","addOrder","EditService","editService","getEditedService","editServicePhoto","ServiceDetails","serviceAPICalled","changeDeleteStatus","getServiceDetails","servicoId","newService","deleteToggle","deleteService","getServiceOrders","backgroundColor","ProfilePage","passwordConfirmation","handlePasswordSubmit","edit","editPassword","editPhoto","ServicesPage","OrdersPage","InvitePage","inviteCode","invitationCode","RedirectToMain","_","Footer","App","loggedUser","loggedin","fetchUser","exact","path","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.7477bd16.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../css/Navbar.css\";\n// import BurguerMenu from '../menu/BurguerMenu'\n\n\nconst Navbar = (props) => {\n  return (\n    \n    <nav className=\"nav-main-box\">\n      <div className=\"nav-left-side\">\n        <NavLink className='nav-link-left' to=\"/\">\n        <img className='logo-img' src='https://res.cloudinary.com/juliajforesti/image/upload/v1589992934/nosso-predio/NOSSO_1_ybzmqc.png' alt='Nosso Prédio' />\n        </NavLink>\n      </div>\n        {/* <BurguerMenu /> */}\n      <div >\n        {!props.user ? (\n          <div className=\"nav-right-side\">\n              <NavLink className='nav-link-right' to=\"/signup\">Signup</NavLink>\n              <NavLink className='nav-link-right' to=\"/login\">Login</NavLink>\n          </div>\n        ) : (\n          <div className='nav-right-side'>\n            <button className='logout-btn' onClick={() => props.logout()}>Logout</button>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\n\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  signup(email, password, name) {\n    return this.service\n      .post(\"/signup\", { email, password, name })\n      .then((response) => (\n        response.data\n        ));\n  }\n\n  login(email, password) {\n    return this.service\n      .post(\"/login\", { email, password })\n      .then((response) => response.data)\n  }\n\n  googleLogin(){\n    return this.service.get('/auth/google')\n    .then(response => response.data)\n  }\n\n  logout() {\n    return this.service\n    .get(\"/logout\", {})\n    .then((response) => response.data);\n  }\n\n  loggedin() {\n    return this.service\n    .get('/loggedin', {})\n    .then((response) => response.data)\n  }\n\n  edit(email, name, userId){\n    return this.service\n    .post(`/edit-user/${userId}`, {email, name}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPassword( password, userId){\n    return this.service\n    .post(`/edit-password/${userId}`, {password}, {new: true})\n    .then((response) => response.data)\n  }\n\n  editPhoto(image, userId){\n    return this.service\n    .post(`/edit-photo/${userId}`, image, {new: true})\n    .then((response) => response.data)\n  }\n\n}\n\nexport default AuthService;\n","// auth/Signup.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Auth.css\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      errorMessage: null,\n      passwordCheck: null,\n      passwordCounter: 0,\n    };\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.responseGoogle = this.responseGoogle.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n    if (name === \"password\") {\n      this.checkPasswordLength();\n    }\n  }\n\n  checkPasswordLength() {\n    console.log(this.state.password.length);\n    if (this.state.password.length+1 > 5) {\n      this.setState({\n        passwordCheck: \"2px solid green\",\n      });\n    } else {\n      this.setState({\n        passwordCheck: \"2px solid red\",\n      });\n    }\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { email, password, name } = this.state;\n    this.service\n      .signup(email, password, name)\n      .then((response) => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n          name: \"\",\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/pagina-principal\");\n      })\n      .catch((err) => {\n        this.setState({\n          errorMessage: \"Email já cadastrado\",\n        });\n      });\n  }\n\n  responseGoogle(response) {\n    this.service\n      .googleLogin()\n      .then((resp) => console.log(\"RESP:\", resp))\n      .catch((err) => console.log(err));\n    console.log(\"RESPONSE:\", response);\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h2 className=\"auth-title\">Cadastrar</h2>\n        <p className=\"auth-alternative\">\n          Já tem uma conta?\n          <Link className=\"auth-alternative\" to={\"/login\"}>\n            {\" \"}\n            Entre <strong> aqui! </strong>\n          </Link>\n        </p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-item\">\n            <label>Nome:</label> <br />\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Email:</label> <br />\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Senha:</label> <br />\n            <input\n              className=\"form-input\"\n              type=\"password\"\n              name=\"password\"\n              style={{ border: this.state.passwordCheck }}\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <p className=\"password-warning\">\n              Crie uma senha com no mínimo 6 caracteres\n            </p>\n          </div>\n          {this.state.password.length < 6 ? (\n            <input\n              disabled\n              className=\"form-input-submit\"\n              type=\"submit\"\n              value=\"Cadastrar\"\n            />\n          ) : (\n            <input\n              className=\"form-input-submit\"\n              type=\"submit\"\n              value=\"Cadastrar\"\n            />\n          )}\n        </form>\n\n        <div className=\"auth-google\">\n          <p className=\"auth-alternative\">\n            Ou então entre com sua conta Google\n          </p>\n          <div className=\"social-login-container\">\n            <a\n              className=\"social-login form-input-submit\"\n              href=\"http://nosso-predio.herokuapp.com/api/auth/google\"\n            >\n              GOOGLE\n            </a>\n          </div>\n        </div>\n        <p>{this.state.errorMessage}</p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","// auth/Login.js\n\nimport React, { Component } from \"react\";\nimport AuthService from \"./AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/Auth.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: null,\n    };\n    this.service = new AuthService();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { email, password } = this.state;\n    this.service\n      .login(email, password)\n      .then((response) => {\n        this.setState({\n          email: \"\",\n          password: \"\",\n        });\n        this.props.getUser(response);\n        this.props.history.push(\"/pagina-principal\");\n      })\n      .catch((err) => {\n        this.setState({\n          errorMessage: \"Email e/ou senha incorretos\",\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h2 className=\"auth-title\">Entrar</h2>\n        <p className=\"auth-alternative\">\n          Não tem uma conta?\n          <Link className=\"auth-alternative\" to={\"/signup\"}>  Cadastre-se <strong>aqui!</strong></Link>\n        </p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"form-item\">\n            <label>Email:</label> <br/>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"form-item\">\n            <label>Senha:</label> <br/>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-input\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input className=\"form-input-submit\" type=\"submit\" value=\"Entrar\" />\n        </form>\n        <div className=\"auth-google\">\n          <p className=\"auth-alternative\">\n            Ou então entre com sua conta Google\n          </p>\n          <div className='social-login-container'>\n              <a className='social-login form-input-submit' href=\"http://nosso-predio.herokuapp.com/api/auth/google\">GOOGLE</a>\n          </div>\n        </div>\n        <div>\n          <p>{this.state.errorMessage}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../components/css/Home.css\";\n\nconst Home = (props) => {\n  return (\n    <div>\n      <div className=\"home-title\">\n        <img src='https://res.cloudinary.com/juliajforesti/image/upload/v1589995572/nosso-predio/NOSSO_2_cdmf2u.png' alt='Nosso Prédio' />\n      </div>\n      {props.user ? (\n        <div className=\"home-link-box\">\n          <Link className=\"home-link\" to=\"/pagina-principal\">\n            Pagina principal\n          </Link>\n        </div>\n      ) : (\n        <div>\n          <div className=\"home-link-box\">\n            <Link className=\"home-link\" to=\"/signup\">\n              Clique aqui para se cadastrar!\n            </Link>\n          </div>\n          <div className=\"home-link-box\">\n            <Link className=\"home-link\" to=\"/login\">\n              Já tem cadastro? Entre aqui!\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <div className=\"home-about-box\">\n        <h2>Sobre</h2>\n        <hr />\n\n\n        <p className=\"home-about-text\">\n          Nosso Prédio é uma plataforma para disponibilização e compra de\n          serviços e produtos entre vizinhos. Ela foi criada com o intuito de\n          estimular pequenos negócios e o senso de comunidade entre os moradores\n          de condomínios. Você pode cadastrar seu condomínio, convidar seus\n          vizinhos para participarem do grupo, disponibilizar e comprar serviços\n          e/ou produtos.\n        </p>\n\n        <ul className=\"home-about-list\">\n          <li>\n            Você tem tempo livre e gostaria de se disponibilizar para passear\n            com os pets de seus vizinhos?\n          </li>\n          <li>\n            Você faz uma feijoada deliciosa e gostaria de oferecer como produto?\n          </li>\n          <li>Você sabe montar móveis e gostaria de oferecer esse serviço?</li>\n        </ul>\n        <h4>Junte-se ao Nosso Prédio!</h4>\n      </div>\n      <div className=\"home-about-box\">\n        <h2>Quem somos</h2>\n        <hr />\n        <div className=\"home-about-text-container\">\n          <div className=\"home-about-text\">\n            <img\n              src=\"https://res.cloudinary.com/juliajforesti/image/upload/v1589924085/nosso-predio/bf542bbc-bdbe-46a2-a6bc-e8d39c4f2d5f_2_zc0fhb.jpg\"\n              alt=\"\"\n            />\n            <h3>Gabriel Bohn</h3>\n            <img src=\"\" alt=\"\" />\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n          <div className=\"home-about-text\">\n            <img\n              src=\"https://res.cloudinary.com/juliajforesti/image/upload/v1589924069/nosso-predio/IMG_2847_r8kbbo.jpg\"\n              alt=\"\"\n            />\n            <h3>Julia Foresti</h3>\n            <img src=\"\" alt=\"\" />\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst ProtectedRoutes = ({component: Component, user, getUser, ...rest}) => {\n\n  return (\n    <Route {...rest} render={(props) => {\n      if (user) {\n        return <Component {...props} user={user} getUser={getUser}/>\n      } else {\n        return <Redirect to={{pathname:'/login', state:{from:props.location}}} />\n      }\n    }} />\n  )\n}\n\nexport default ProtectedRoutes;","import axios from \"axios\";\n\nclass MainService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API,\n      withCredentials: true,\n    });\n  }\n\n  getUser(userId) {\n    return this.service\n      .get(`/user/${userId}`)\n      .then((response) => response.data);\n  }\n\n  getAllBuildings() {\n    return this.service\n      .get(\"/buildings\", {})\n      .then((buildings) => buildings.data);\n  }\n\n  addBuilding(name, cep, number) {\n    return this.service\n      .post(\"/add-building\", { name, cep, number }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getBuildingDetails(buildingId) {\n    return this.service\n      .get(`/building/${buildingId}`)\n      .then((response) => response.data);\n  }\n\n  addService(name, description, category, price, date, apartment, buildingId) {\n    return this.service\n      .post(`/building/${buildingId}/add-service`, {\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  getAllServices() {\n    return this.service.get(\"/services\").then((response) => response.data);\n  }\n\n  getServiceDetails(buildingId, serviceId) {\n    return this.service\n      .get(`/building/${buildingId}/service/${serviceId}`)\n      .then((response) => response.data);\n  }\n\n  getAllOrders() {\n    return this.service.get(\"/orders\").then((response) => response.data);\n  }\n\n  addOrder(buildingId, serviceId, quantity) {\n    return this.service\n      .post(`/building/${buildingId}/service/${serviceId}/add-order`, {\n        quantity,\n      }, {new: true})\n      .then((response) => response.data);\n  }\n\n  buildingInvite(code) {\n    return this.service\n      .get(`building-invitation/${code}`, {new: true})\n      .then((response) => response.data);\n  }\n\n  changeStatus(buildingId, serviceId, orderId, status) {\n    return this.service\n      .post(\n        `/building/${buildingId}/service/${serviceId}/status-order/${orderId}`, {status}, {new: true}\n      )\n      .then((response) => response.data);\n  }\n\n  editBuilding(buildingId, name, cep, number){\n    return this.service.post(`/edit-building/${buildingId}`, {name, cep, number})\n    .then(response => response.data)\n  }\n\n  editBuildingPhoto(image, buildingId){\n    return this.service.post(`/edit-building-photo/${buildingId}`, image, {new: true})\n    .then(response => response.data)\n  }\n\n  editService(buildingId, serviceId, name, description, price, category, apartment, date){\n    return this.service.post(`/building/${buildingId}/edit-service/${serviceId}`, {name, description, price, category, apartment, date})\n    .then(response => response.data)\n  }\n\n  deleteService(buildingId, serviceId){\n    return this.service.delete(`/building/${buildingId}/delete-service/${serviceId}`)\n    .then(response => response.data)\n  }\n\n  editServicePhoto(image, buildingId, serviceId){\n    return this.service\n    .post(`/building/${buildingId}/edit-service-photo/${serviceId}`, image, {new: true})\n    .then((response) => response.data)\n  }\n}\n\nexport default MainService;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ServicesList = (props) => {\n  if (props.servicePage) {\n    return (\n      <div>\n        {props.services.map((service, idx) => {\n          return (\n            <div key={idx}>\n              <Link\n                to={`/condominio/${service.building}/serviço/${service._id}`}\n              >\n                <div className=\"card-box\">\n                  <img\n                    className=\"card-img\"\n                    src={service.image}\n                    alt={service.name}\n                  />\n                  <div className='service-card-right-side'>\n                    <h3>{service.name.toUpperCase()}</h3>\n                    <p>{service.description}</p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {props.services.map((service, idx) => {\n          return (\n            <div key={idx}>\n              <Link\n                to={`/condominio/${service.building}/serviço/${service._id}`}\n              >\n                <div className=\"card-box\">\n                  <img\n                    className=\"card-img\"\n                    src={service.image}\n                    alt={service.name}\n                  />\n                  <h3>{service.name}</h3> <br />\n                  <h3>R${service.price}</h3>\n                </div>\n              </Link>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n};\n\nexport default ServicesList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nconst OrderList = (props) => {\n  const { orders } = props;\n  let statusAvailable = [\"Pendente\", \"Confirmado\", \"Entregue\", \"Cancelado\"];\n  return (\n    <div>\n      {orders.map((order, idx) => {\n      let name = order.origin.name.split(' ')[0];\n\n        return (\n          <div key={idx} >\n            <Link\n              to={`/condominio/${order.service.building}/serviço/${order.service._id}`}\n            >\n              <div className=\"card-box order-card\"  >\n                <img className=\"card-img\" src={order.service.image}  alt='' />\n                <div className='card-order-middle'>\n                  <h3>{order.service.name}</h3>\n                  <h5>Qtd: {order.quantity}</h5>\n                </div>\n                {/* USER CRIOU  */}\n                {props.user.services.some(item => item._id === order.service._id) ? (\n                  <div className='card-order-right-side'>\n                    <p className='order-by'>Pedido por: {name}</p>\n\n                    {order.status !== \"Cancelado\" ? (\n                      <form\n                        onChange={(e) =>\n                          props.handleStatus(\n                            order.service.building,\n                            order.service._id,\n                            order._id,\n                            e.target.value\n                          )\n                        }\n                      >\n                        <label className='status-label'>Alterar status: </label>\n                        <select className='status-select' name=\"status\">\n                          <option value={order.status}>{order.status}</option>\n                          {statusAvailable\n                            .filter((elem) => elem !== order.status)\n                            .map((element, idx) => (\n                              <option key={idx} value={element}>\n                                {element}\n                              </option>\n                            ))}\n                        </select>\n                      </form>\n                    ) : (\n                      <p>Status: Cancelado</p>\n                    )}\n                  </div>\n                ) : (\n                  <div className='card-order-right-side'>\n                {/* USER PEDIU */}\n                    <p className='status-info'>Status do pedido: {order.status}</p>\n                    {order.status === \"Cancelado\" ? (\n                      <></>\n                    ) : (\n                      <button\n                        className='cancel-btn'\n                        onClick={(e) =>\n                          props.handleStatus(\n                            order.service.building,\n                            order.service._id,\n                            order._id,\n                            \"Cancelado\"\n                          )\n                        }\n                      >\n                        Cancelar pedido\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default OrderList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MainService from \"../MainService\";\nimport ServicesList from \"../service/ServicesList\";\nimport OrderList from \"../order/OrderList\";\nimport \"../css/MainPage.css\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      orders: [],\n      activeOrders: [],\n      services: [],\n      buildingApiCalled: false,\n      userApiCalled: false,\n      serviceApiCalled: false,\n      orderAPICalled: false,\n      toggleButton: false,\n      confirmationCode: \"\",\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    });\n  }\n\n  getUserUpdated() {\n    if (!this.state.userApiCalled) {\n      this.service.getUser(this.props.user._id).then((response) => {\n        this.props.getUser(response);\n        this.setState({\n          userApiCalled: true,\n        });\n      });\n    }\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin._id.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggle() {\n    this.setState({\n      toggleButton: !this.state.toggleButton,\n    });\n  }\n\n  handleToggleStatus() {\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton,\n    });\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    this.service\n      .buildingInvite(this.state.confirmationCode)\n      .then((response) => {\n        this.setState({\n          toggleButton: !this.state.toggleButton,\n          confirmationCode: \"\",\n          buildingApiCalled: false,\n          userApiCalled: false,\n        });\n      });\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) =>\n        this.setState({\n          orderAPICalled: false,\n        })\n      );\n  }\n\n  activeOrders() {\n    const orders = [...this.state.orders];\n    this.setState({\n      activeOrders: orders.filter((order) => order.status !== \"Cancelado\"),\n    });\n  }\n\n  render() {\n    this.getUserUpdated();\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <div className=\"main-page-title-box\">\n            <h1>\n              <span className=\"title-first\">Olá</span>\n              <span className=\"title-second\"> {this.props.user.name}</span>\n            </h1>\n          </div>\n          <div className=\"welcome-section\">\n            <p>Seja bem vindo(a) ao Nosso Prédio! </p>\n            <p>Você ainda não faz parte de nenhum condomínio da nossa rede.</p>\n          </div>\n          <div>\n            <div className=\"add-building-box\">\n              <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                Criar Condominio\n              </Link>\n            </div>\n            <div className=\"invitation-code-box\">\n              <button\n                className=\"invitation-code-btn\"\n                onClick={() => this.handleToggle()}\n              >\n                Já tem um convite? Clique aqui para inserir o código\n              </button>\n\n              {this.state.toggleButton ? (\n                <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                  <input\n                    onChange={this.handleChangeCode}\n                    value={this.state.confirmationCode}\n                    type=\"text\"\n                    name=\"confirmationCode\"\n                    placeholder=\"insira seu código de acesso\"\n                  />\n                  <button type=\"submit\">Enviar</button>\n                </form>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      this.getUserServices();\n      this.getUserOrders();\n      return (\n        <div>\n          <div className=\"main-page-title-box\">\n            <h1>\n              <span className=\"title-first\">Olá</span>\n              <span className=\"title-second\"> {this.props.user.name}</span>\n            </h1>\n          </div>\n          <div>\n            <div className=\"add-building-box\">\n              <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                Criar Condominio\n              </Link>\n            </div>\n            <div className=\"invitation-code-box\">\n              <button\n                className=\"invitation-code-btn\"\n                onClick={() => this.handleToggle()}\n              >\n                Já tem um convite? Clique aqui para inserir o código\n              </button>\n              {this.state.toggleButton ? (\n                <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                  <input\n                    onChange={this.handleChangeCode}\n                    value={this.state.confirmationCode}\n                    type=\"text\"\n                    name=\"confirmationCode\"\n                    placeholder=\"insira seu código de acesso\"\n                  />\n                  <button type=\"submit\">Enviar</button>\n                </form>\n              ) : (\n                <></>\n              )}\n            </div>\n\n            <div className=\"main-page-section-title-container\">\n              <Link className=\"main-page-section-title\" to=\"/meus-condominios\">\n              <span className=\"title-third\">Meus </span>\n              <span className=\"title-second\">Condomínios</span>\n              </Link>\n            </div>\n            {this.props.user.buildings.length > 3\n              ? this.state.buildings.slice(0, 3).map((building, idx) => {\n                  return (\n                    <div key={idx}>\n                      <Link to={`/condominio/${building._id}`}>\n                        <div className=\"card-box\">\n                          <img\n                            className=\"card-img\"\n                            src={building.image}\n                            alt=\"\"\n                          />\n                          <h3>{building.name}</h3>\n                          <p>CEP: {building.address.cep}</p>\n                        </div>\n                      </Link>\n                    </div>\n                  );\n                })\n              : this.state.buildings.map((building, idx) => {\n                  return (\n                    <div key={idx}>\n                      <Link to={`/condominio/${building._id}`}>\n                        <div className=\"card-box\">\n                          <img\n                            className=\"card-img\"\n                            src={building.image}\n                            alt=\"\"\n                          />\n                          <h3>{building.name}</h3>\n                          <p>{building.address.cep}</p>\n                        </div>\n                      </Link>\n                    </div>\n                  );\n                })}\n            {this.props.user.buildings.length > 3 ? (\n              <div className=\"see-more-box\">\n                <Link className=\"see-more-btn\" to=\"/meus-condominios\">\n                  Ver mais\n                </Link>\n              </div>\n            ) : (\n              <div></div>\n            )}\n\n            <div className=\"main-page-section-title-container\">\n              <Link className=\"main-page-section-title\" to=\"/meus-serviços\">\n              <div className=\"title-third\">Meus </div>\n              <div className=\"title-second\">serviços e produtos </div>\n              </Link>\n            </div>\n            <div>\n              {this.props.user.services.length > 0 ? (\n                <ServicesList\n                  services={this.state.services.slice(0,3)}\n                  {...this.props}\n                ></ServicesList>\n              ) : (\n                <></>\n              )}\n              <div className=\"see-more-box\">\n              <Link className=\"see-more-btn\" to=\"/meus-serviços\">\n                  Ver mais\n              </Link>\n              </div>\n            </div>\n\n            <div className=\"main-page-section-title-container\">\n              <Link className=\"main-page-section-title\" to=\"/meus-pedidos\">\n              <span className=\"title-third\">Meus </span>\n              <span className=\"title-second\">pedidos </span>\n              </Link>\n            </div>\n            <div>\n              <div className=\"see-more-box\">\n                <button\n                  className=\"see-more-btn\"\n                  onClick={this.handleToggleStatus}\n                >\n                  {this.state.toggleStatusButton\n                    ? \"Mostrar todos os pedidos\"\n                    : \"Mostrar somente pedidos ativos\"}\n                </button>\n              </div>\n              {this.state.toggleStatusButton ? (\n                <OrderList\n                  activeOrders={this.activeOrders}\n                  handleStatus={this.handleStatus}\n                  orders={this.state.orders.filter(\n                    (order) => order.status !== \"Cancelado\"\n                  )}\n                  {...this.props}\n                />\n              ) : (\n                <OrderList\n                  handleStatus={this.handleStatus}\n                  orders={this.state.orders}\n                  {...this.props}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass AddBuilding extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      cep: \"\",\n      number: \"\",\n      border: null,\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { name, cep, number } = this.state;\n    this.service.addBuilding(name, cep, number).then((response) => {\n      if (response.message) {\n        //arrumar um jeito melhor de mandar essa mensagem\n        this.setState({\n          duplicate:\n            \"Este prédio já está cadastrado, entre em contato com seus vizinhos para conseguir o link de acesso.\",\n          border: \"2px solid red\",\n        });\n        return;\n      }\n      this.props.history.push(\"/pagina-principal\");\n    });\n    console.log(this.props);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h1>\n        <span className=\"title-first\">Adicione </span>\n        <span className=\"title-second\">seu Condomínio </span>\n        </h1>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-item\">\n              <label>Nome:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"name\"\n                className=\"form-input\"\n                value={this.state.name}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>CEP:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"cep\"\n                style={{ border: this.state.border }}\n                className=\"form-input\"\n                value={this.state.cep}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>Número:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"number\"\n                style={{ border: this.state.border }}\n                name=\"number\"\n                className=\"form-input\"\n                value={this.state.number}\n              />\n            </div>\n\n            <button\n              style={{ width: \"200px\", border: this.state.border }}\n              className=\"form-input-submit\"\n              type=\"submit\"\n            >\n              Adicionar Condomínio\n            </button>\n          </form>\n          <br />\n          {this.state.duplicate ? (\n            <div className=\"add-building-err\">\n              <p>{this.state.duplicate}</p>\n            </div>\n          ) : null}\n        </div>\n        <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n      </div>\n    );\n  }\n}\n\nexport default AddBuilding;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditBuilding extends Component {\n  constructor(props) {\n    super(props);\n    const { name } = this.props.building;\n    const { cep, number } = this.props.building.address;\n\n    this.state = {\n      name: name,\n      cep: cep,\n      number: number,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.building._id;\n    const { name, cep, number } = this.state;\n    this.service\n      .editBuilding(buildingId, name, cep, number)\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedBuilding(response);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    console.log(e.target.files[0])\n\n    uploadData.append(\"image\", e.target.files[0]);\n    const buildingId = this.props.building._id;\n\n    this.service.editBuildingPhoto(uploadData, buildingId)\n    .then((response) => {\n      console.log(response)\n      this.props.getEditedBuilding(response);\n      this.props.handleClick();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <label>Alterar imagem:</label>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>cep:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"cep\"\n            value={this.state.cep}\n          ></input>\n          <label>Número:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n          ></input>\n          <button type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditBuilding;\n","import React, { Component } from \"react\";\n\nexport default class InviteLink extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      copySuccess: false,\n    };\n  }\n\n  copyCodeToClipboard = () => {\n    this.setState({\n      copySuccess: true,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <p>Código de acesso: {this.props.code}</p>\n        </div>\n        <div>\n          <button onClick={() => {\n            navigator.clipboard.writeText(`http://nosso-predio.herokuapp.com/convite/${this.props.code}`);\n            this.copyCodeToClipboard();\n          }}>\n            Copiar link\n          </button>\n          {this.state.copySuccess ? (\n            <div style={{ color: \"green\" }}>Copiado!</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\nimport ServicesList from \"../service/ServicesList\";\nimport EditBuilding from \"./EditBuilding\";\nimport InviteLink from \"./InviteLink\";\nimport '../css/DetailsPage.css';\n\nclass BuildingDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      building: {},\n      services: [],\n      search: \"\",\n      buildingApiCalled: false,\n      serviceApiCalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleClick = this.handleClick.bind(this);\n    this.getEditedBuilding = this.getEditedBuilding.bind(this);\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getBuildingDetails() {\n    if (!this.state.buildingApiCalled) {\n      const { params } = this.props.match;\n      this.service.getBuildingDetails(params.id).then((response) => {\n        this.setState({\n          building: response,\n          buildingApiCalled: true,\n        });\n      });\n    }\n  }\n\n  getEditedBuilding(newBuilding) {\n    console.log();\n    this.setState({\n      building: newBuilding,\n    });\n  }\n\n  getBuildingServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.building.includes(this.state.building._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    this.getBuildingDetails();\n    this.getBuildingServices();\n    return (\n      <div>\n        <div>\n          {/* <img className='details-page-img' src={this.state.building.image} alt={this.state.building.name} /> */}\n          <h1 className='details-page-title'>\n          {this.state.building.name}\n          </h1>\n          {this.props.user._id === this.state.building.owner ? (\n            <div>\n            <InviteLink code={this.state.building.confirmationCode} />\n            <button className='details-btn' onClick={this.handleClick}>Editar</button>\n              {this.state.toggleEdit ? (\n                <EditBuilding\n                  getEditedBuilding={this.getEditedBuilding}\n                  building={this.state.building}\n                  handleClick={this.handleClick}\n                />\n              ) : (\n                <></>\n              )}\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n        <h2 className='details-section-title'>Serviços/Produtos disponíveis</h2>\n        <div className='search-bar-container'>\n            <input\n              className=\"form-input\"\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar serviço pelo nome\"\n            />\n          </div>\n        <div className='details-btn'>\n          <Link className='details-link' to={`/condominio/${this.state.building._id}/adicionar-serviço`}>\n            Adicionar Serviço/Produto\n          </Link>\n        </div>\n        <ServicesList services={this.state.services.filter((elem) => {\n                return elem.name.toLowerCase().includes(this.state.search);\n              })} {...this.props} />\n              <button onClick={this.props.history.goBack} className=\"details-btn\">Voltar</button>\n      </div>\n    );\n  }\n}\n\nexport default BuildingDetails;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport { Link } from \"react-router-dom\";\n\nclass BuildingsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      search: \"\",\n      buildingApiCalled: false,\n      toggleButton: false,\n      confirmationCode: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleChangeCode = this.handleChangeCode.bind(this);\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  handleToggle() {\n    this.setState({\n      toggleButton: !this.state.toggleButton,\n    });\n  }\n\n  handleChangeCode(e) {\n    this.setState({\n      confirmationCode: e.target.value,\n    });\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    this.service\n      .buildingInvite(this.state.confirmationCode)\n      .then((response) => {\n        this.setState({\n          toggleButton: !this.state.toggleButton,\n          confirmationCode: \"\",\n          buildingApiCalled: false,\n        });\n      });\n  }\n\n  getBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((response) => {\n        this.setState({\n          buildings: response,\n          buildingApiCalled: true,\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  getUserBuildings() {\n    if (!this.state.buildingApiCalled) {\n      this.service.getAllBuildings().then((buildings) => {\n        this.setState({\n          buildingApiCalled: true,\n          buildings: buildings.filter((building) =>\n            building.residents.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // IF USER DOESNT HAVE BUILDINGS\n    if (this.props.user.buildings.length < 1) {\n      this.getBuildings();\n      return (\n        <div>\n          <div className=\"main-page-title-box\">\n            <h1>\n              <span className=\"title-first\">Meus </span>\n              <span className=\"title-second\">Condomínios</span>\n            </h1>\n          </div>\n          <div className=\"add-building-box\">\n                <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                  Criar Condominio\n                </Link>\n              </div>\n              <div className=\"invitation-code-box\">\n                <button\n                  className=\"invitation-code-btn\"\n                  onClick={() => this.handleToggle()}\n                >\n                  Já tem um convite? Clique aqui para inserir o código\n                </button>\n\n                {this.state.toggleButton ? (\n                  <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                    <input\n                      onChange={this.handleChangeCode}\n                      value={this.state.confirmationCode}\n                      type=\"text\"\n                      name=\"confirmationCode\"\n                      placeholder=\"insira seu código de acesso\"\n                    />\n                    <button type=\"submit\">Enviar</button>\n                  </form>\n                ) : (\n                  <></>\n                )}\n              <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n              </div>\n        </div>\n      );\n\n      // IF USER HAS BUILDINGS\n    } else {\n      this.getUserBuildings();\n      return (\n        <div>\n          <div className=\"main-page-title-box\">\n            <h1>\n              <span className=\"title-first\">Meus </span>\n              <span className=\"title-second\">Condomínios</span>\n            </h1>\n          </div>\n          <div className=\"add-building-box\">\n                <Link className=\"add-building-btn\" to=\"/adicionar-condominio\">\n                  Criar Condominio\n                </Link>\n              </div>\n              <div className=\"invitation-code-box\">\n                <button\n                  className=\"invitation-code-btn\"\n                  onClick={() => this.handleToggle()}\n                >\n                  Já tem um convite? Clique aqui para inserir o código\n                </button>\n\n                {this.state.toggleButton ? (\n                  <form onSubmit={this.handleOnSubmit} type=\"submit\">\n                    <input\n                      onChange={this.handleChangeCode}\n                      value={this.state.confirmationCode}\n                      type=\"text\"\n                      name=\"confirmationCode\"\n                      placeholder=\"insira seu código de acesso\"\n                    />\n                    <button type=\"submit\">Enviar</button>\n                  </form>\n                ) : (\n                  <></>\n                )}\n              </div>\n          <div className='search-bar-container'>\n            <input\n              className=\"form-input search-bar\"\n              type=\"text\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar condomínio pelo nome\"\n            />\n          </div>\n          <div>\n            {this.state.buildings\n              .filter((elem) => {\n                return elem.name.toLowerCase().includes(this.state.search);\n              })\n              .map((building, idx) => {\n                return (\n                  <div key={idx}>\n                        <Link to={`/condominio/${building._id}`}>\n                          <div className=\"card-box\">\n                            <img\n                              className=\"card-img\"\n                              src={building.image}\n                              alt={building.name}\n                            />\n                            <h3>{building.name}</h3>\n                            <div>\n                            <p>CEP: {building.address.cep}</p>\n                            <p>Número: {building.address.number}</p>\n                            </div>\n                          </div>\n                        </Link>\n                      </div>\n                );\n              })}\n          </div>\n          <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default BuildingsPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass AddService extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\",\n      category: \"Produto\",\n      price: \"\",\n      date: \"\",\n      apartment: \"\",\n    };\n    this.service = new MainService();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { params } = this.props.match;\n    const buildingId = params.id;\n    const { name, description, category, price, date, apartment } = this.state;\n\n    this.service\n      .addService(\n        name,\n        description,\n        category,\n        price,\n        date,\n        apartment,\n        buildingId\n      )\n      .then((response) => {\n        this.props.history.push(`/condominio/${buildingId}`);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <h1>\n        <span className=\"title-first\">Adicione </span>\n        <span className=\"title-second\">seu Serviço ou Produto </span>\n        </h1>\n        <div></div>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-item\">\n              <label>Nome:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text\"\n                className=\"form-input\"\n                name=\"name\"\n                value={this.state.name}\n                placeholder='Cookies do bem'\n              />\n            </div>\n            <div className=\"form-item\">\n              <label>Descrição:</label> <br />\n              <input\n                onChange={this.handleChange}\n                type=\"text-area\"\n                name=\"description\"\n                value={this.state.description}\n                placeholder='Cookies caseiros feitos com muito amor e carinho'\n              />\n            </div>\n            <div className=\"form-item\">\n              <label>Categoria:</label> <br />\n              <select onChange={this.handleChange} name=\"category\">\n                <option value=\"Produto\">Produto</option>\n                <option value=\"Serviço\">Serviço</option>\n              </select>\n            </div>\n            <div className=\"form-item\">\n              <label>Preço:</label> <br />\n              <input\n              className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"price\"\n                value={this.state.price}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>Data:</label> <br />\n              <input\n              className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"date\"\n                name=\"date\"\n                value={this.state.date}\n              />\n            </div>\n\n            <div className=\"form-item\">\n              <label>Complemento:</label> <br />\n              <input\n              className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"apartment\"\n                value={this.state.apartment}\n                placeholder='Apt. 103'\n              />\n            </div>\n\n            <button className=\"form-button\" type=\"submit\">\n              Adicionar\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass OrderForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { quantity: 0 };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { value } = e.target;\n    this.setState({\n      quantity: value,\n    });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const { quantity } = this.state;\n    const { service, building } = this.props;\n\n    this.service\n      .addOrder(building, service, quantity)\n      .then((response) => {\n        this.setState({\n          quantity: 0,\n        });\n        this.props.history.push(`/meus-pedidos`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <div className=\"\">\n          <div className=\"\">\n            <label>Quantidade:</label>\n            <input\n              className=\"\"\n              type=\"number\"\n              name=\"quantity\"\n              value={this.state.quantity}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>\n        <input className=\"button\" type=\"submit\" value=\"Pedir\" />\n      </form>\n    );\n  }\n}\n\nexport default OrderForm;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      name,\n      description,\n      category,\n      price,\n      date,\n      apartment,\n    } = this.props.service;\n    this.state = {\n      name: name,\n      description: description,\n      category: category,\n      price: price,\n      date: date,\n      apartment: apartment,\n    };\n    this.service = new MainService();\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    const buildingId = this.props.service.building;\n    const serviceId = this.props.service._id;\n\n    const { name, description, price, category, apartment, date } = this.state;\n    this.service\n      .editService(\n        buildingId,\n        serviceId,\n        name,\n        description,\n        price,\n        category,\n        apartment,\n        date\n      )\n      .then((response) => {\n        console.log(response);\n        this.props.handleClick();\n        this.props.getEditedService(response);\n      });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    uploadData.append(\"image\", e.target.files[0]);\n    const buildingId = this.props.service.building;\n    const serviceId = this.props.service._id;\n\n    this.service\n      .editServicePhoto(uploadData, buildingId, serviceId)\n      .then((response) => {\n        this.props.getEditedService(response);\n      });\n  }\n\n  render() {\n    return (\n      <div className='edit-container'>\n        <label>Alterar imagem:</label>\n        <input type=\"file\" onChange={this.handleFileUpload} />\n        <form className='edit-container' onSubmit={this.handleFormSubmit}>\n          <label>Nome:</label>\n          <input className='form-input'\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          ></input>\n          <label>Descrição:</label>\n          <input className='form-input'\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"description\"\n            value={this.state.description}\n          ></input>\n          <label>Preço:</label>\n          <input className='form-input'\n            onChange={this.handleChange}\n            type=\"number\"\n            name=\"price\"\n            value={this.state.price}\n          ></input>\n          <label>Categoria:</label>\n          {this.props.service.category === \"Produto\" ? (\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Produto\">Produto</option>\n              <option value=\"Serviço\">Serviço</option>\n            </select>\n          ) : (\n            <select onChange={this.handleChange} name=\"category\">\n              <option value=\"Serviço\">Serviço</option>\n              <option value=\"Produto\">Produto</option>\n            </select>\n          )}\n          <label>Complemento:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"apartment\"\n            value={this.state.apartment}\n          ></input>\n          <label>Data:</label>\n          <input\n            onChange={this.handleChange}\n            type=\"date\"\n            name=\"date\"\n            value={this.state.date}\n          ></input>\n          <button className=\"details-btn\" type=\"submit\">Salvar</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditService;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport OrderList from \"../order/OrderList\";\nimport OrderForm from \"../order/OrderForm\";\nimport EditService from \"./EditService\";\n\nclass ServiceDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: {},\n      orders: [],\n      serviceAPICalled: false,\n      orderAPICalled: false,\n      toggleEdit: false,\n    };\n    this.service = new MainService();\n    this.handleStatus = this.handleStatus.bind(this);\n    this.getEditedService = this.getEditedService.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.changeDeleteStatus = this.changeDeleteStatus.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      toggleEdit: !this.state.toggleEdit,\n    });\n  }\n\n  getServiceDetails() {\n    if (!this.state.serviceAPICalled) {\n      const { params } = this.props.match;\n      this.service\n        .getServiceDetails(params.id, params.servicoId)\n        .then((response) => {\n          this.setState({\n            service: response,\n            serviceAPICalled: true,\n          });\n        });\n    }\n  }\n\n  getServiceOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.service._id.includes(this.state.service._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => console.log(response));\n  }\n\n  getEditedService(newService) {\n    this.setState({\n      service: newService,\n    });\n  }\n\n  changeDeleteStatus() {\n    this.setState({\n      deleteToggle: !this.state.deleteToggle\n    })\n  }\n\n  deleteService() {\n    const buildingId = this.state.service.building;\n    const serviceId = this.state.service._id;\n    this.service\n      .deleteService(buildingId, serviceId)\n      .then((response) => {\n        this.props.history.push('/pagina-principal')\n      });\n  }\n\n  render() {\n    this.getServiceDetails();\n    this.getServiceOrders();\n    return (\n      <div>\n        <h1 className=\"details-page-title\">{this.state.service.name}</h1>\n        <div className='details-section-2-container'>\n          <img className=\"details-page-img\" src={this.state.service.image} alt={this.state.service.name} />\n          <div className='details-section-2'>\n            <h5 className=\"item-title\">Tipo:</h5>\n            <p>{this.state.service.category}</p>\n            <h5 className=\"item-title\">Data:</h5>\n            <h4>{this.state.service.date}</h4>\n            <h5 className=\"item-title\">Descrição:</h5>\n            <p>{this.state.service.description}</p>\n          </div>\n        </div>\n        <button onClick={this.props.history.goBack} className=\"details-btn\">Voltar</button>\n        {this.state.service.owner === this.props.user._id ? (\n          <div>\n              \n                <button className=\"details-btn form-input-submit\" style={{width:\"90%\", backgroundColor: \"red\"}} onClick={() => this.deleteService()}>Realmente quero deletar</button>\n              \n            {!this.state.toggleEdit ? (\n              <>\n                <button className=\"details-btn\" onClick={this.handleClick}>\n                  Editar\n                </button>\n              </>\n            ) : (\n              <EditService\n                handleClick={this.handleClick}\n                getEditedService={this.getEditedService}\n                service={this.state.service}\n              />\n            )}\n            <h3>Pedidos:</h3>\n            <OrderList\n              handleStatus={this.handleStatus}\n              building={this.state.service.building}\n              orders={this.state.orders}\n              {...this.props}\n            />\n          </div>\n        ) : (\n          <div>\n\n            <h3>Faça seu pedido</h3>\n            <OrderForm {...this.props} service={this.state.service._id} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ServiceDetails;\n","import React, { Component } from \"react\";\nimport AuthService from \"../auth/AuthService\";\nimport \"../css/Profile.css\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    const { user } = this.props;\n    this.state = {\n      toggleEdit: false,\n      name: user.name,\n      email: user.email,\n      password: \"qualquer-coisa\",\n      passwordConfirmation: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n\n    this.service = new AuthService();\n  }\n\n  handleClick() {\n    this.setState({ toggleEdit: !this.state.toggleEdit });\n  }\n\n  handleFormSubmit(e) {\n    console.log(this.props);\n    e.preventDefault();\n    const { email, name } = this.state;\n    const userId = this.props.user._id;\n    this.service.edit(email, name, userId).then((response) => {\n      this.props.getUser(response);\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      });\n    });\n  }\n\n  handlePasswordSubmit(e) {\n    e.preventDefault();\n    const { password, passwordConfirmation } = this.state;\n    const userId = this.props.user._id;\n    if (password === passwordConfirmation) {\n      this.service.editPassword(password, userId).then((response) =>\n        this.setState({\n          toggleEdit: !this.state.toggleEdit,\n        })\n      );\n    } else {\n      return;\n    }\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleFileUpload(e) {\n    const uploadData = new FormData();\n\n    uploadData.append(\"image\", e.target.files[0]);\n\n    this.service.editPhoto(uploadData, this.props.user._id).then((response) => {\n      this.props.getUser(response);\n      this.setState({\n        toggleEdit: !this.state.toggleEdit,\n      });\n    });\n  }\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div className=\"profile-container\">\n        <div className=\"title-container\">\n          <h1 className=\"profile-title\">Meu Perfil</h1>\n          <img className=\"profile-img\" src={user.image} alt={user.name} />\n\n        </div>\n\n        <div className=\"edit-container\">\n          <button className=\"edit-btn\" onClick={this.handleClick}>\n          \n          {!this.state.toggleEdit ? \"Editar\" : \"Voltar\"}\n            \n          </button>\n          {!this.state.toggleEdit ? (\n            <div className=\"profile-info\">\n              <img className=\"profile-img\" src={user.image} alt={user.name} />\n              <h3>Nome: {user.name}</h3>\n              <h3>Email: {user.email}</h3>\n            </div>\n          ) : (\n            <div>\n              <form className=\"edit-form\" onSubmit={this.handleFormSubmit}>\n                <label>Nome:</label>\n                <input\n                  onChange={this.handleChange}\n                  className=\"form-input\"\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                ></input>\n                <label>Email:</label>\n                <input\n                  onChange={this.handleChange}\n                  className=\"form-input\"\n                  type=\"email\"\n                  name=\"email\"\n                  value={this.state.email}\n                ></input>\n                <button className=\"form-input-submit\" type=\"submit\">Salvar</button>\n              </form>\n              <form className=\"edit-password-container\" onSubmit={this.handlePasswordSubmit}>\n                  <label>Senha:</label>\n                  <input\n                    onChange={this.handleChange}\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-input\"\n                    value={this.state.password}\n                  ></input>\n                  <label>Confirme sua senha:</label>\n                  <input\n                    onChange={this.handleChange}\n                    className=\"form-input\"\n                    type=\"password\"\n                    name=\"passwordConfirmation\"\n                    value={this.state.passwordConfirmation}\n                  ></input>\n                  <button className=\"form-input-submit\" type=\"submit\">Alterar senha</button>\n                </form>\n\n              <div className=\"edit-photo-container\">\n                <label>Alterar foto de perfil:</label>\n                <input onChange={this.handleFileUpload} type=\"file\" />\n              </div>\n\n                \n\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport ServicesList from \"../service/ServicesList\";\n\n\nclass ServicesPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      services: [],\n      search: \"\",\n      serviceApiCalled: false,\n    };\n    this.service = new MainService();\n\n    this.handleChangeSearch = this.handleChangeSearch.bind(this);\n  }\n\n  handleChangeSearch(e) {\n    this.setState({\n      search: e.target.value.toLowerCase(),\n    });\n  }\n\n  getUserServices() {\n    if (!this.state.serviceApiCalled) {\n      this.service.getAllServices().then((response) => {\n        this.setState({\n          serviceApiCalled: true,\n          services: response.filter((service) =>\n            service.owner.includes(this.props.user._id)\n          ),\n        });\n      });\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    // IF USER DOESNT HAVE SERVICES\n    this.getUserServices();\n    if (this.props.user.services.length < 1) {\n      return (\n        <div>\n        <div className='main-page-title-box'>\n          <h1>Meus serviços e produtos</h1> \n          <div>\n            <h1 className=\"add-building-err\">Você ainda não tem nenhum serviço, entre em um de seus condominios e crie um!</h1>\n          </div>\n          <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n          </div>\n        </div>\n      );\n      // IF USER HAS SERVICES\n    } else {\n      return (\n        <div>\n        <div className=\"main-page-title-box\">\n            <h1>\n              <span className=\"title-first\">Meus </span>\n              <span className=\"title-second\">Serviços e Produtos</span>\n            </h1>\n          </div>\n          <div className='search-bar-container'>\n            <input\n              type=\"text\"\n              className=\"form-input search-bar\"\n              value={this.state.search}\n              onChange={this.handleChangeSearch}\n              placeholder=\"Buscar serviço pelo nome\"\n            />\n          </div>\n\n          <div>\n          <ServicesList\n              servicePage={true}  \n                services={this.state.services\n                    .filter((elem) => {\n                      return elem.name.toLowerCase().includes(this.state.search);\n                    })}\n                {...this.props}\n              ></ServicesList>\n          </div>\n          <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ServicesPage;\n","import React, { Component } from \"react\";\nimport MainService from \"../MainService\";\nimport OrderList from \"./OrderList\";\n\n\nclass OrdersPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        orders: [],\n        activeOrders:[],\n      search: \"\",\n      orderAPICalled: false,\n      toggleStatusButton: true,\n    };\n    this.service = new MainService();\n\n    this.handleStatus = this.handleStatus.bind(this);\n    this.handleToggleStatus = this.handleToggleStatus.bind(this);\n  }\n\n  getUserOrders() {\n    if (!this.state.orderAPICalled) {\n      this.service.getAllOrders().then((response) => {\n        this.setState({\n          orders: response.filter((order) =>\n            order.origin._id.includes(this.props.user._id)\n          ),\n          orderAPICalled: true,\n        });\n      });\n    }\n  }\n\n  handleToggleStatus(){\n    this.setState({\n      toggleStatusButton: !this.state.toggleStatusButton\n    })\n  }\n\n  handleStatus(buildingId, serviceId, orderId, status) {\n    this.service\n      .changeStatus(buildingId, serviceId, orderId, status)\n      .then((response) => this.setState({\n        orderAPICalled: false\n      })\n      );\n  }\n\n  activeOrders(){\n    const orders = [...this.state.orders]\n    this.setState({\n      activeOrders: orders.filter(order => order.status !== \"Cancelado\")\n    })\n  }\n\n  render() {\n    // IF USER DOESNT HAVE ORDERS\n    this.getUserOrders();\n    if (this.state.orders.length < 1) {\n      return (\n        <div>\n        <div className='main-page-title-box'>\n          <h1>Meus pedidos</h1> \n          <div>\n            <h1 className=\"add-building-err\">Você ainda não fez nenhum pedido, acesse um de seus condominios e peça!</h1>\n          </div>\n          <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n          </div>\n        </div>\n      );\n\n      // IF USER HAS ORDERS\n    } else {\n      return (\n        <div>\n          <div className=\"main-page-title-box\">\n            <h1>\n              <span className=\"title-first\">Meus </span>\n              <span className=\"title-second\">Pedidos</span>\n            </h1>\n          </div>\n          <div>\n          <button className=\"back-btn\" onClick={this.handleToggleStatus}>\n              {this.state.toggleStatusButton ? ('Mostrar todos os pedidos') : ('Mostrar somente pedidos ativos')}\n              </button>\n              {this.state.toggleStatusButton ? (\n                <OrderList activeOrders={this.activeOrders} handleStatus={this.handleStatus} orders={this.state.orders.filter(order => order.status !== \"Cancelado\")} {...this.props} />\n              ):(\n                <OrderList handleStatus={this.handleStatus} orders={this.state.orders} {...this.props}/>\n              )}\n          </div>\n          <button onClick={this.props.history.goBack} className=\"back-btn\">Voltar</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default OrdersPage;\n","import React, { Component } from 'react';\nimport MainService from '../MainService'\n\nclass InvitePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n        this.service = new MainService();\n        this.inviteCode = this.inviteCode.bind(this)\n    }\n\n    inviteCode(){\n        const {invitationCode} = this.props.match.params\n        this.service.buildingInvite(invitationCode).then(response => {\n        //   this.props.getUser(response)\n          this.props.history.push(`/pagina-principal`);\n        })\n      }\n\n    render() { \n        this.inviteCode()\n        console.log(this.props)\n        return ( <div>\n            <h1>Encontrando seu predio</h1>\n        </div> );\n    }\n}\n \nexport default InvitePage;","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\n\nconst RedirectToMain = _ => {\n    return (\n        <Redirect to=\"/\" />\n    );\n}\n\nexport default RedirectToMain","import React from \"react\";\nimport \"../css/Footer.css\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineHome, AiOutlineUser } from \"react-icons/ai\";\nimport { FaRegBuilding } from \"react-icons/fa\";\n\n\nconst Footer = (props) => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-top\">\n        <Link className=\"footer-link\" to=\"/pagina-principal\">\n          <AiOutlineHome className='footer-icon' />\n          Página Principal\n        </Link>\n\n        <Link className=\"footer-link\" to=\"/meus-condominios\">\n          <FaRegBuilding className='footer-icon' />\n          Meus Condomínios\n        </Link>\n\n        <Link className=\"footer-link\" to=\"/perfil\">\n          <AiOutlineUser className='footer-icon' />\n          Perfil\n        </Link>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./components/css/Home.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport Home from \"./components/Home\";\nimport ProtectedRoutes from \"./components/auth/ProtectedRoutes\";\nimport MainPage from \"./components/user/MainPage\";\nimport AddBuilding from \"./components/building/AddBuilding\";\nimport BuildingDetails from \"./components/building/BuildingDetails\";\nimport BuildingsPage from \"./components/building/BuildingsPage\";\nimport AddService from \"./components/service/AddService\";\nimport ServiceDetails from \"./components/service/ServiceDetails\";\nimport ProfilePage from \"./components/user/ProfilePage\";\nimport ServicesPage from \"./components/service/ServicesPage\";\nimport OrdersPage from \"./components/order/OrdersPage\";\nimport InvitePage from \"./components/building/InvitePage\";\nimport RedirectToMain from \"./components/RedirectToMain\";\nimport 'bulma/css/bulma.css';\nimport Footer from './components/footer/Footer'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedUser: null,\n    };\n    this.service = new AuthService();\n\n    this.getUser = this.getUser.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  fetchUser() {\n    if (this.state.loggedUser === null) {\n      this.service\n        .loggedin()\n        .then((response) => {\n          this.setState({\n            loggedUser: response,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            loggedUser: false,\n          });\n        });\n    }\n  }\n\n  getUser(user) {\n    this.setState({\n      loggedUser: user,\n    });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then((response) => {\n        this.setState({\n          loggedUser: null,\n        });\n        this.props.history.push(`/`);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    this.fetchUser();\n    return (\n      <div className=\"app-outer-container\">\n        {this.state.loggedUser ? (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n            />\n\n            <div className=\"app-container\">\n              <Switch>\n                <Route exact path=\"/\" render={(props) => <Home user={this.state.loggedUser} {...props} />}/>\n                <ProtectedRoutes\n                  exact\n                  path=\"/pagina-principal\"\n                  component={MainPage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/adicionar-condominio\"\n                  component={AddBuilding}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id\"\n                  component={BuildingDetails}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id/adicionar-serviço\"\n                  component={AddService}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/condominio/:id/serviço/:servicoId\"\n                  component={ServiceDetails}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-condominios\"\n                  component={BuildingsPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-serviços\"\n                  component={ServicesPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/meus-pedidos\"\n                  component={OrdersPage}\n                  user={this.state.loggedUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/convite/:invitationCode\"\n                  component={InvitePage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                <ProtectedRoutes\n                  exact\n                  path=\"/perfil\"\n                  component={ProfilePage}\n                  user={this.state.loggedUser}\n                  getUser={this.getUser}\n                />\n                {/* this route will catch any route that wasnt matched in previous routes */}\n                <Route component={RedirectToMain} />\n              </Switch>\n            </div>\n            <Footer/>\n          </div>\n        ) : (\n          <div>\n            <Navbar\n              user={this.state.loggedUser}\n              logout={this.logout}\n              {...this.props}\n            />\n            <div className=\"app-container\">\n              <Switch>\n                <Route exact path=\"/\"  render={(props) => <Home user={this.state.loggedUser} {...props} />} />\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={(props) => (\n                    <Signup getUser={this.getUser} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  render={(props) => (\n                    <Login getUser={this.getUser} {...props} />\n                  )}\n                />\n                <Route component={RedirectToMain} />\n              </Switch>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>\n    <App />\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}